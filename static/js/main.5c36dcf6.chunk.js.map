{"version":3,"sources":["lib/routes/index.js","ui/organisms/footer/footer.js","ui/theme-options.js","features/theme-options/with-theme-hok.js","ui/atoms/logo/logo.js","features/globalSettings/model/global-reducer.js","features/header/toggle-theme/toggle-theme.js","ui/atoms/menu-link/menu-link.js","ui/molecules/search-input-with-icon/search-input-with-icon.js","features/header/search-form/search-form.js","ui/molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs.js","ui/molecules/comment/loading-comment/loading-comment.js","ui/organisms/comments-list/loading-comments-list/loading-comments-list.js","ui/atoms/single-page-title/loading-single-page-title/loading-single-page-title.js","ui/atoms/content/loading-content/loading-content.js","ui/templates/post/loading-post/loading-post.js","api/posts.js","features/post/model/post-reducer.js","ui/molecules/breadcrumbs/breadcrumbs/breadcrumbs.js","ui/atoms/single-page-title/single-page-title/single-page-title.js","ui/atoms/content/content/content.js","ui/molecules/comment/comment/comment.js","ui/organisms/comments-list/comments-list/comments-list.js","features/post/components/add-comment-form.js","features/post/components/post.js","features/post/components/index.js","pages/posts/post/page.js","ui/atoms/header-image/header-image.js","ui/molecules/header-image/header-image.js","ui/molecules/post-card/loading-post-card/loading-post-card.js","ui/organisms/post-cards/loading-post-cards/loading-post-cards.js","ui/atoms/page-title/loading-page-title/loading-page-title.js","ui/templates/homepage-posts/loading-homepage-posts/loading-homepage-posts.js","ui/molecules/post-card/post-card/post-card.js","ui/organisms/post-cards/post-cards/post-cards.js","ui/atoms/page-title/page-title/page-title.js","ui/templates/homepage-posts/homepage-posts/homepage-posts.js","features/posts/model/posts-reducer.js","features/posts/components/all-posts-page.js","include/images/ocean.jpg","pages/index/page.js","ui/templates/category-posts/category-posts/category-posts.js","ui/templates/category-posts/loading-category-posts/loading-category-posts.js","features/posts/components/category-posts-page.js","include/images/gory.png","pages/posts/page.js","ui/templates/page/page/page.js","pages/404/page.js","ui/templates/found-posts/loading-found-posts/loading-found-posts.js","ui/templates/found-posts/found-posts/found-posts.js","features/posts/components/found-posts-page.js","include/images/forest.jpeg","pages/search/page.js","ui/templates/page/loading-page/loading-page.js","features/single-page/model/page-reducer.js","features/single-page/components/index.js","pages/index.js","pages/page/page.js","features/header/header-menu/header-menu.js","features/header/hide-on-scroll/hide-on-scroll.js","features/header/header.js","App.js","reportWebVitals.js","index.js"],"names":["RouteWithSubRoutes","route","path","render","props","component","state","routes","MapRoutes","mapRoutes","map","i","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","useCopyrightStyles","makeStyles","theme","copyright","color","Copyright","classes","Typography","variant","className","Date","getFullYear","useFooterStyles","footer","padding","spacing","marginTop","backgroundColor","palette","primary","main","link","FooterTemplate","Container","maxWidth","Link","target","href","lightTheme","createMuiTheme","text","secondary","light","background","elements","secondaryText","links","visited","hover","buttons","hoverText","darkTheme","withTheme","Component","theme_type","useSelector","global","ThemeProvider","useStyles","logoLink","common","white","textDecoration","LogoWithNavLink","to","logoText","TOGGLE_THEME_TYPE","TOGGLE_IS_MOBILE_MENU_ACTIVE","toggleThemeType","themeType","type","toggleIsMobileMenuActive","isActive","InitialState","is_theme_type_fetching","is_mobile_menu_active","globalReducer","action","ToggleThemeButton","dispatch","useDispatch","IconButton","onClick","aria-label","Brightness3","style","grey","BrightnessLow","ToggleThemeButtonMobile","ListItem","button","ListItemText","menuItem","marginLeft","marginRight","display","paddingBlock","MenuLink","linkTo","NavLink","linkText","search","position","borderRadius","shape","fade","width","breakpoints","up","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","form","marginBottom","SearchInputWithIcon","onKeyDown","onKeyPress","InputBase","onChange","onChangeSearchText","placeholder","root","input","value","inputValue","inputProps","SearchForm","useState","setValue","history","useHistory","e","keyCode","preventDefault","push","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","cursor","boxShadow","shadows","emphasize","icon","Chip","breadCrumbs","chipsSkeleton","LoadingBreadcrumbsNavigation","Breadcrumbs","label","fontSize","Skeleton","avatar","content","paddingTop","description","header","LoadingComment","Card","CardHeader","title","subheader","CardContent","LoadingCommentsList","skeletonItems","titleSkeleton","LoadingSinglePageTitle","align","contentSkeleton","LoadingContent","animation","contentWrapper","pageWrapper","LoadingPostTemplate","instance","axios","baseURL","PostAPI","category","perPage","pageNum","get","then","response","catch","error","data","searchText","categorySlug","slug","postId","query","post","PageAPI","SET_POST","SET_EMPTY_POST","RESET_POST","SET_COMMENTS","POST_TOGGLE_IS_FETCHING","COMMENTS_TOGGLE_IS_FETCHING","setComments","comments","postToggleIsFetching","isFetching","commentsToggleIsFetching","postIsFetching","commentsIsFetching","currentPostData","isEmpty","id","categoryName","postReducer","rendered","_embedded","name","elem","author","author_name","author_image_url","author_avatar_urls","comment","date","replace","handleClick","event","BreadcrumbsNavigation","breadLinks","linkAddress","key","currentPageName","SinglePageTitle","lineHeight","filter","border","borderColor","Content","dangerouslySetInnerHTML","__html","Comment","Avatar","src","author_image","CommentsList","paddingBottom","formCard","paddingRight","dark","input1","input2","progress","AddCommentForm","isShow","message","changeMessage","useForm","mode","register","handleSubmit","setError","errors","done","CircularProgress","noValidate","autoComplete","onSubmit","commentData","getState","a","commentsData","addComment","TextField","author_email","inputRef","required","pattern","margin","maxLength","fullWidth","multiline","rows","Button","startIcon","PostTemplate","breadcrumbsLinks","pageTitle","pageContent","Post","lastLinksId","currentPost","toggleIsEmpty","length","Helmet","SinglePostPage","post_slug","useParams","HeaderImage","paper2","textAlign","backgroundImage","imageSrc","backgroundSize","backgroundRepeat","backgroundPosition","minHeight","Paper","headerGrid","HeaderImageBlock","Grid","item","xs","image","tags","flexWrap","button1","button2","LoadingPostCard","CardActionArea","gutterBottom","LoadingPostCards","count","md","sm","container","LoadingPageTitle","LoadingHomepagePostsTemplate","headerImage","postsPerPage","excerpt","PostCard","tag","size","CardMedia","alt","image_url","pagination","PostCards","postsItems","postsData","pagesCount","Pagination","page","currentPage","changePage","showFirstButton","showLastButton","PageTitle","HomepagePostsTemplate","console","log","pageName","SET_POSTS","RESET_POSTS","SET_POSTS_FROM_SEARCH","POSTS_TOGGLE_IS_FETCHING","SET_FOUND_POSTS_ADDITIONAL_DATA","SET_CATEGORY","POSTS_TOGGLE_IS_FOUND","SET_POSTS_PAGES_COUNT","setPostsPagesCount","postsToggleIsFound","isFound","resetPosts","setCategory","setPosts","posts","postsToggleIsFetching","postsPagesCount","postsIsFetching","isCategoryFound","postsReducer","avatar_urls","elem2","featured_media","media_details","sizes","medium_large","source_url","imgReq","self","_links","author_request","image_request","tags_request","undefined","index","elemIndex","authorName","authorAvatar","AllPostsPage","isNotFound","toggleIsNotFound","postsPage","Array","isArray","Math","ceil","headers","Homepage","ocean","CategoryPostsTemplate","LoadingCategoryPostsTemplate","CategoryPostsPage","category_slug","categories","CategoryPage","gory","PageTemplate","NotFoundPage","LoadingFoundPostsTemplate","FoundPostsTemplate","FoundPostsPage","searchRequest","foundPostsResponse","dataLength","authorData","tagsData","imageData","SearchPostsPage","request","forest","LoadingPageTemplate","SET_PAGE","SET_EMPTY_PAGE","PAGE_TOGGLE_IS_FETCHING","RESET_PAGE","pageToggleIsFetching","pageIsFetching","currentPageData","pageReducer","Page","exact","zIndex","posFixed","ListItemLink","MobileMenu","isMobileMenuActive","menuLinks","List","Divider","DesktopMenu","Box","MobileHamburgerIcon","HideOnScroll","children","isDisable","trigger","useScrollTrigger","Slide","appear","direction","in","toolBar","appBar","box","Header","useTheme","matches","useMediaQuery","down","AppBar","Toolbar","flexDirection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5c36dcf6.chunk.js","sourcesContent":["import {Route} from \"react-router-dom\";\r\nimport {Switch} from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport function RouteWithSubRoutes(route) {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                // pass the sub-routes down to keep nesting\r\n                <route.component {...props} state={route.state} routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport function MapRoutes(props){\r\n    let mapRoutes = props.routes.map((route, i) => (\r\n        <RouteWithSubRoutes state={props.state} key={i} {...route} />\r\n    ));\r\n    return (\r\n        <>\r\n            <ScrollToTop/>\r\n            <Switch>\r\n                {mapRoutes}\r\n            </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport function ScrollToTop() {\r\n    const { pathname } = useLocation();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n    }, [pathname]);\r\n\r\n    return null;\r\n}","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useCopyrightStyles = makeStyles((theme) => ({\r\n    copyright: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n\r\nfunction Copyright() {\r\n    const classes = useCopyrightStyles();\r\n\r\n    return (\r\n        <Typography variant=\"body2\" className={classes.copyright}>\r\n            {'Copyright © '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useFooterStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    link: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n//color: theme.palette.footer.linkcolor: theme.palette.footer.main\r\nexport const FooterTemplate = (props) => {\r\n    const classes = useFooterStyles();\r\n\r\n    return(\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"lg\">\r\n                    <Link className={classes.link} target=\"_blank\" color=\"inherit\" href=\"https://github.com/edlay17/react-wordpress\">\r\n                        github.com/edlay17\r\n                    </Link>\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default FooterTemplate;","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n    palette: {\r\n        text: {\r\n            primary: \"rgba(0, 0, 0, 0.87)\",\r\n            secondary: \"rgba(0, 0, 0, 0.54)\",\r\n        },\r\n        primary: {\r\n            light: '#f5f5f5',\r\n            main: '#424242',\r\n            background: '#f5f5f5',\r\n            text: '#212121',\r\n        },\r\n        secondary: { // form border\r\n            main: '#424242',\r\n        },\r\n        elements: { // post card\r\n            main: \"#ffffff\",\r\n            secondary: \"#e0e0e0\",\r\n            text: \"#424242\",\r\n            secondaryText: \"#757575\",\r\n        },\r\n        links: {\r\n            visited: \"#606e8c\",\r\n            hover: \"#1560bd\",\r\n            main: \"#08457e\",\r\n        },\r\n        buttons: {\r\n            text: \"#f5f5f5\",\r\n            hoverText: \"#f5f5f5\",\r\n            hover: \"#757575\",\r\n            main: \"#424242\",\r\n        },\r\n        footer: {\r\n            main: \"#ffffff\",\r\n            link: \"#ffffff\"\r\n        }\r\n    }\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n    palette: {\r\n        text: {\r\n            primary: \"#cfd8dc\",\r\n            secondary: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        primary: {\r\n            light: \"#777777\",\r\n            main: '#212121',\r\n            background: '#333333',\r\n            text: '#ffffff',\r\n        },\r\n        secondary: { // form border\r\n            main: '#cfd8dc',\r\n            text: \"#212121\",\r\n            secondaryText: \"#757575\",\r\n        },\r\n        elements: { // post card\r\n            main: \"#424242\",\r\n            secondary: \"#575757\",\r\n            text: \"#cfd8dc\",\r\n            secondaryText: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        links: {\r\n            visited: \"#bdbdbd\",\r\n            hover: \"#e0e0e0\",\r\n            main: \"#eeeeee\",\r\n        },\r\n        buttons: {\r\n            text: \"#212121\",\r\n            hoverText: \"#212121\",\r\n            hover: \"#757575\",\r\n            main: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        footer: {\r\n            main: \"#ffffff\",\r\n            link: \"#ffffff\"\r\n        },\r\n    }\r\n});","// libs\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n// ui\r\nimport {darkTheme, lightTheme} from \"../../ui/theme-options\";\r\n\r\nexport const withTheme = Component => ({...props}) => {\r\n    const theme_type = useSelector(state => state.global.theme_type);\r\n    return (\r\n        <ThemeProvider theme={theme_type === \"dark\" ? darkTheme : lightTheme}>\r\n            <Component {...props} />\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default withTheme;\r\n\r\n","import Typography from \"@material-ui/core/Typography\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logoLink: {\r\n        color: theme.palette.common.white,\r\n        textDecoration: \"none\"\r\n    },\r\n}));\r\n\r\nexport const LogoWithNavLink = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Typography variant=\"h5\">\r\n            <NavLink className={classes.logoLink} to=\"/\">{props.logoText}</NavLink>\r\n        </Typography>\r\n     )\r\n}\r\n\r\nexport default LogoWithNavLink;","const TOGGLE_THEME_TYPE = \"toggleThemeType\";\r\nconst TOGGLE_IS_MOBILE_MENU_ACTIVE = \"toggleIsMobileMenuActive\";\r\n\r\nexport const toggleThemeType = (themeType) => ({\r\n    type: TOGGLE_THEME_TYPE,\r\n    themeType\r\n})\r\nexport const toggleIsMobileMenuActive = (isActive) => ({\r\n    type: TOGGLE_IS_MOBILE_MENU_ACTIVE,\r\n    isActive\r\n})\r\n\r\n\r\nlet InitialState = {\r\n    is_theme_type_fetching: true,\r\n    theme_type: \"light\",\r\n    is_mobile_menu_active: false,\r\n};\r\n\r\nconst globalReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case TOGGLE_THEME_TYPE:\r\n            stateCopy = {\r\n                ...state,\r\n                theme_type: action.themeType,\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case TOGGLE_IS_MOBILE_MENU_ACTIVE:\r\n            stateCopy = {\r\n                ...state,\r\n                is_mobile_menu_active: action.isActive,\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default globalReducer;","// libs\r\nimport {Brightness3, BrightnessLow} from \"@material-ui/icons\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\n// models\r\nimport {toggleThemeType} from \"../../globalSettings/model/global-reducer\";\r\n\r\n\r\nexport const ToggleThemeButton = () => {\r\n    const dispatch = useDispatch();\r\n    const theme_type = useSelector(state => state.global.theme_type)\r\n\r\n    return (\r\n        <IconButton\r\n            onClick={() => {theme_type === \"dark\" ? dispatch(toggleThemeType(\"light\")) : dispatch(toggleThemeType(\"dark\"))}}\r\n            aria-label=\"delete\"\r\n        >\r\n            {theme_type === \"dark\"\r\n                ? <Brightness3 style={{ color: grey[100] }}/>\r\n                : <BrightnessLow style={{ color: grey[100] }}/>\r\n            }\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport const ToggleThemeButtonMobile = () => {\r\n    const dispatch = useDispatch();\r\n    const theme_type = useSelector(state => state.global.theme_type)\r\n    const onChangeThemeType = () => {\r\n        if(theme_type === \"dark\")dispatch(toggleThemeType(\"light\"));\r\n        else dispatch(toggleThemeType(\"dark\"));\r\n    }\r\n\r\n    return (\r\n        <ListItem button onClick={onChangeThemeType}>\r\n            <ListItemText primary={theme_type === \"dark\" ? \"light theme\" : \"dark theme\"} />\r\n        </ListItem>\r\n    )\r\n}","import {Link as NavLink} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuItem: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        color: theme.palette.common.white,\r\n        display: \"inline-block\",\r\n        paddingBlock: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport const MenuLink = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Link to={props.linkTo} className={classes.menuItem} component={NavLink}>\r\n            {props.linkText}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MenuLink;","import {fade, makeStyles} from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    form: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\"\r\n    }\r\n}));\r\n\r\nexport const SearchInputWithIcon = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <form onKeyDown={props.onKeyPress} className={classes.form}>\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon/>\r\n                </div>\r\n                <InputBase\r\n                    onChange={props.onChangeSearchText}\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    value={props.inputValue}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchInputWithIcon;","// libs\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// ui\r\nimport SearchInputWithIcon from \"../../../ui/molecules/search-input-with-icon/search-input-with-icon\";\r\n\r\nexport const SearchForm = (props) => {\r\n    let [value, setValue]=useState(\"\");\r\n    let history = useHistory();\r\n\r\n    let onChangeSearchText = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    let onKeyPress = (e) => {\r\n        if(e.keyCode === 13){\r\n            e.preventDefault();\r\n            if(e.target.value !== \"\"){\r\n                setValue(\"\");\r\n                history.push(`/search/${value}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchInputWithIcon onKeyPress={onKeyPress} onChangeSearchText={onChangeSearchText} inputValue={value}/>\r\n        </>\r\n    )}\r\n\r\nexport default SearchForm;","import HomeIcon from \"@material-ui/icons/Home\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport {emphasize, makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.elements.text,\r\n        backgroundColor: theme.palette.elements.secondary,\r\n        height: theme.spacing(3),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n            cursor: \"pointer\"\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.elements.text\r\n    }\r\n}))(Chip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadCrumbs: {\r\n        marginBottom: theme.spacing(3),\r\n        color: theme.palette.elements.text,\r\n    },\r\n    chipsSkeleton: {\r\n        borderRadius: theme.spacing(2),\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(3),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n}));\r\n\r\nexport const LoadingBreadcrumbsNavigation = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadCrumbs}>\r\n            <StyledBreadcrumb\r\n                component={NavLink}\r\n                to=\"/\"\r\n                label=\"Home\"\r\n                icon={<HomeIcon className={classes.icon} fontSize=\"small\" />}\r\n            />\r\n            <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n            <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default LoadingBreadcrumbsNavigation;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: theme.palette.elements.main\r\n    },\r\n    avatar: {\r\n        height: theme.spacing(6.2),\r\n        width: theme.spacing(6.2),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n    content: {\r\n        paddingTop: theme.spacing(0),\r\n    },\r\n    description: {\r\n        height: theme.spacing(5),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n    header: {\r\n        '& .MuiCardHeader-subheader span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        },\r\n        '& .MuiCardHeader-title span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    },\r\n}));\r\n\r\nexport const LoadingComment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                className={classes.header}\r\n                avatar={\r\n                    <Skeleton variant=\"circle\" className={classes.avatar}/>\r\n                }\r\n                title={\r\n                    <Skeleton/>\r\n                }\r\n                subheader={\r\n                    <Skeleton/>\r\n                }\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Skeleton variant=\"rect\" className={classes.description}/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoadingComment;","import LoadingComment from \"../../../molecules/comment/loading-comment/loading-comment\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport const LoadingCommentsList = (props) => {\r\n\r\n    let skeletonItems = [];\r\n    for (let i = 0; i < 3; i++){\r\n        skeletonItems.push(\r\n            <LoadingComment/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            {skeletonItems}\r\n        </Container>\r\n    )}\r\n\r\nexport default LoadingCommentsList;","import Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    titleSkeleton: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    }\r\n}));\r\n\r\nexport const LoadingSinglePageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\" className={classes.title}>\r\n            <Skeleton className={classes.titleSkeleton}/>\r\n        </Typography>\r\n    )}\r\n\r\nexport default LoadingSinglePageTitle;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentSkeleton: {\r\n        height: theme.spacing(70),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10)\r\n    },\r\n}));\r\n\r\nexport const LoadingContent = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={classes.content}>\r\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.contentSkeleton}/>\r\n            </div>\r\n        </Container>\r\n    )}\r\n\r\nexport default LoadingContent;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport LoadingCommentsList from \"../../../organisms/comments-list/loading-comments-list/loading-comments-list\";\r\nimport LoadingSinglePageTitle\r\n    from \"../../../atoms/single-page-title/loading-single-page-title/loading-single-page-title\";\r\nimport LoadingContent from \"../../../atoms/content/loading-content/loading-content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10)\r\n    },\r\n    contentSkeleton: {\r\n        height: theme.spacing(60),\r\n    }\r\n}));\r\n\r\nexport const LoadingPostTemplate = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <LoadingBreadcrumbsNavigation/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <LoadingSinglePageTitle/>\r\n                    <LoadingContent/>\r\n                    <LoadingCommentsList/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default LoadingPostTemplate;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://wp.edlay.net/wp-json/wp/v2/'\r\n});\r\n\r\nexport const PostAPI = {\r\n    getPosts: (category, perPage = 10, pageNum = 1) =>{\r\n        return instance.get(`posts/?per_page=${perPage}&page=${pageNum}&category_name=${category}&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getAllPosts: (perPage = 10, pageNum = 1) => {\r\n        return instance.get(`posts/?per_page=${perPage}&page=${pageNum}&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getFoundPosts: (searchText, perPage = 10, pageNum = 1) => {\r\n        return instance.get(`search/?per_page=${perPage}&page=${pageNum}&search=${searchText}&type=post&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getCategoryName: (categorySlug) => {\r\n        return instance.get(`categories/?slug=${categorySlug}`).then(response => response.data);\r\n    },\r\n    getPost: (slug) =>{\r\n        return instance.get(`posts/?slug=${slug}&_embed&_fields=id,content,title,_links,_embedded`).then(response => response.data);\r\n    },\r\n    getComments: (postId) => {\r\n        return instance.get(`comments/?post=${postId}`).then(response => response.data);\r\n    },\r\n    getByQuery: (query) =>{\r\n        return axios.get(query).then(response => response.data);\r\n    },\r\n    putComment: (data) => {\r\n        return instance.post(`comments`, data)\r\n            .then(response => response.data)\r\n            .catch(error => ({error}));\r\n    }\r\n};\r\n\r\nexport const PageAPI = {\r\n    getPage: (slug) =>{\r\n        return instance.get(`pages/?slug=${slug}&_fields=id,content,title`).then(response => response.data);\r\n    },\r\n}","import {PostAPI} from \"../../../api/posts\";\r\n\r\nconst SET_POST = \"setPost\";\r\nconst SET_EMPTY_POST = \"setEmptyPost\";\r\nconst RESET_POST = \"resetPost\";\r\nconst SET_COMMENTS = \"setComments\";\r\nconst POST_TOGGLE_IS_FETCHING = \"postToggleIsFetching\";\r\nconst COMMENTS_TOGGLE_IS_FETCHING = \"commentsToggleIsFetching\";\r\n\r\nconst setPost = (post) => ({\r\n    type: SET_POST,\r\n    post\r\n})\r\nconst setEmptyPost = () => ({\r\n    type: SET_EMPTY_POST\r\n})\r\nexport const resetPost = () => ({\r\n    type: RESET_POST\r\n})\r\nconst setComments = (comments) => ({\r\n    type: SET_COMMENTS,\r\n    comments\r\n})\r\nconst postToggleIsFetching = (isFetching) => ({\r\n    type: POST_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nconst commentsToggleIsFetching = (isFetching) => ({\r\n    type: COMMENTS_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\n\r\nexport const getPost = (slug) => async (dispatch, getState) => {\r\n    dispatch(postToggleIsFetching(true));\r\n    const data = await PostAPI.getPost(slug);\r\n    if(data.length === 0) {\r\n        dispatch(setEmptyPost());\r\n    }\r\n    else{\r\n        dispatch(setPost(data));\r\n        let postId = getState().post.currentPostData.id;\r\n        const commentsData = await PostAPI.getComments(postId);\r\n        dispatch(setComments(commentsData));\r\n    }\r\n    dispatch(postToggleIsFetching(false));\r\n}\r\n\r\nexport const addComment = (commentData, setError, done) => async (dispatch, getState) => {\r\n    dispatch(commentsToggleIsFetching(true));\r\n    const comment = {...commentData, post: getState().post.currentPostData.id}\r\n    const response = await PostAPI.putComment(comment);\r\n    if(response.error){\r\n        setError(\"content\", {\r\n            type: \"manual\",\r\n            message: \"Duplicate comment found. You seem to have said that already!\"\r\n        });\r\n    }\r\n    else{\r\n        done();\r\n        let postId = getState().post.currentPostData.id;\r\n        const commentsData = await PostAPI.getComments(postId);\r\n        dispatch(setComments(commentsData));\r\n    }\r\n    dispatch(commentsToggleIsFetching(false));\r\n}\r\n\r\n\r\nlet InitialState = {\r\n    postIsFetching: true,\r\n    commentsIsFetching: false,\r\n    currentPostData: {\r\n        isEmpty: false,\r\n        id: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        categoryName: \"\",\r\n        categorySlug: \"\",\r\n        comments: [],\r\n    }\r\n};\r\n\r\nconst postReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    isEmpty: false,\r\n                    id: action.post[0].id,\r\n                    title: action.post[0].title.rendered,\r\n                    content: action.post[0].content.rendered,\r\n                    categoryName: action.post[0]._embedded[\"wp:term\"][0][0].name,\r\n                    categorySlug: action.post[0]._embedded[\"wp:term\"][0][0].slug,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_EMPTY_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    isEmpty: true,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case RESET_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                postIsFetching: true\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_COMMENTS:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    comments: action.comments.map(elem => (\r\n                        {\r\n                            author: elem.author_name,\r\n                            author_image_url: elem.author_avatar_urls[\"96\"],\r\n                            comment: elem.content.rendered,\r\n                            date: elem.date.replace(\"T\", \" \"),\r\n                            id: elem.id\r\n                        }\r\n                    ))\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case POST_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                postIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case COMMENTS_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                commentsIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import HomeIcon from \"@material-ui/icons/Home\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport {emphasize, makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.elements.text,\r\n        backgroundColor: theme.palette.elements.secondary,\r\n        height: theme.spacing(3),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: emphasize(theme.palette.elements.secondary, 0.12),\r\n            cursor: \"pointer\"\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.elements.secondary, 0.20),\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.elements.text\r\n    }\r\n}))(Chip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadCrumbs: {\r\n        color: theme.palette.elements.text,\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nexport const BreadcrumbsNavigation = (props) => {\r\n    const classes = useStyles();\r\n    const breadLinks = props.breadLinks.map((link) =>\r\n        <StyledBreadcrumb component={NavLink} to={link.linkAddress} label={link.linkText} key={link.key}/>\r\n    );\r\n\r\n    return(\r\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadCrumbs}>\r\n            <StyledBreadcrumb\r\n                component={NavLink}\r\n                to=\"/\"\r\n                label=\"Home\"\r\n                icon={<HomeIcon className={classes.icon} fontSize=\"small\" />}\r\n            />\r\n            {breadLinks}\r\n            <StyledBreadcrumb label={props.currentPageName} onClick={handleClick}/>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default BreadcrumbsNavigation;","import Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.primary.text,\r\n    }\r\n}));\r\n\r\n\r\nexport const SinglePageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\" className={classes.title}>\r\n            {props.title}\r\n        </Typography>\r\n    )}\r\n\r\nexport default SinglePageTitle;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        color: theme.palette.elements.text,\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n            filter: theme.type === \"dark\" && \"brightness(20%)\",\r\n        },\r\n        '& a': {\r\n            color: theme.palette.links.main,\r\n        },\r\n        '& a:hover': {\r\n            color: theme.palette.links.hover,\r\n        },\r\n        '& a:visited': {\r\n            color: theme.palette.links.visited,\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n            borderColor: theme.palette.secondary.main,\r\n        },\r\n    }\r\n}));\r\n\r\nexport const Content = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={classes.content}>\r\n                <div className=\"question-text\" dangerouslySetInnerHTML={{__html: props.content}}/>\r\n            </div>\r\n        </Container>\r\n    )}\r\n\r\nexport default Content;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: theme.palette.elements.main\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    content: {\r\n        paddingTop: theme.spacing(0),\r\n    },\r\n    header: {\r\n        color: theme.palette.elements.text,\r\n        '& .MuiCardHeader-subheader': {\r\n            color: theme.palette.elements.secondaryText,\r\n        }\r\n    },\r\n    comment: {\r\n        color: theme.palette.elements.text,\r\n    }\r\n}));\r\n\r\nexport const Comment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" src={props.author_image} className={classes.avatar}>\r\n                            E\r\n                        </Avatar>\r\n                    }\r\n                    title={props.author}\r\n                    subheader={props.date}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography className={classes.comment} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.comment}\r\n                    </Typography>\r\n                </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Comment;","import Comment from \"../../../molecules/comment/comment/comment\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.primary.text,\r\n        marginBottom: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport const CommentsList = (props) => {\r\n    const classes = useStyles();\r\n    const comments = props.comments.map((comment) =>\r\n            <Comment\r\n                key={comment.id}\r\n                author={comment.author}\r\n                author_image={comment.author_image_url}\r\n                date={comment.date}\r\n                comment={comment.comment}\r\n            />\r\n    );\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Typography align=\"left\" variant=\"h5\" component=\"p\" className={classes.title}>\r\n                Comments:\r\n            </Typography>\r\n            {comments}\r\n        </Container>\r\n    )}\r\n\r\nexport default CommentsList;","// libs\r\nimport Container from \"@material-ui/core/Container\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useState} from \"react\";\r\n\r\n// models\r\nimport {addComment} from \"../model/post-reducer\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    formCard: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        backgroundColor: theme.palette.elements.main,\r\n        color: theme.palette.elements.text\r\n    },\r\n    form: {\r\n        '& .MuiTextField-root': {\r\n            '& .MuiInputLabel-root': {\r\n                color: theme.palette.elements.text\r\n            },\r\n            '& .MuiInputBase-formControl': {\r\n                color: theme.palette.elements.text,\r\n            },\r\n            '& .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.elements.secondaryText,\r\n            },\r\n            '& .Mui-error .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.error.dark,\r\n            }\r\n        },\r\n    },\r\n    input1: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    input2: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.buttons.main,\r\n        color: theme.palette.buttons.text,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.buttons.hover,\r\n            color: theme.palette.buttons.hoverText,\r\n        }\r\n    },\r\n    progress: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}));\r\n\r\nexport const AddCommentForm = (props) => {\r\n    const [message, changeMessage] = useState({isShow: false, message: \"\"});\r\n    const dispatch = useDispatch();\r\n    const isFetching = useSelector(state => state.post.commentsIsFetching);\r\n    const classes = useStyles();\r\n    const {register, handleSubmit, setError, errors, setValue } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n    const done = () => {\r\n        setValue('author_email', '');\r\n        setValue('author_name', '');\r\n        setValue('content', '');\r\n        changeMessage({\r\n            isShow: true,\r\n            message: \"Done!\"\r\n        })\r\n    }\r\n    const onSubmit = (data) => {\r\n        dispatch(addComment(data, setError, done));\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Card className={classes.formCard}>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    add comment\r\n                </Typography>\r\n                {isFetching && <CircularProgress className={classes.progress}/>}\r\n                <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        error={errors.author_email}\r\n                        inputRef={register({required: true, pattern: /\\S+@\\S+\\.\\S+/})}\r\n                        name=\"author_email\"\r\n                        className={classes.input1}\r\n                        margin=\"normal\"\r\n                        id=\"outlined-textarea\"\r\n                        label=\"E-mail\"\r\n                        placeholder=\"vasya@mail.ru\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        error={errors.author_name}\r\n                        inputRef={register({required: true, maxLength: 15})}\r\n                        name=\"author_name\"\r\n                        className={classes.input2}\r\n                        margin=\"normal\"\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Name\"\r\n                        placeholder=\"Vasily\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        error={errors.content}\r\n                        inputRef={register({required: true, maxLength: 250})}\r\n                        name=\"content\"\r\n                        fullWidth={true}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Comment (max 250sym)\"\r\n                        placeholder=\"Hello world! Great post\"\r\n                        multiline\r\n                        rows={5}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    {errors.content && <p>{errors.content.message}</p>}\r\n                    {message.isShow && <p>{message.message}</p>}\r\n                    <Button\r\n                        name=\"submit\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        startIcon={<RecordVoiceOverIcon />}\r\n                        onClick={() => { changeMessage({isShow: false, message: \"\"}) }}\r\n                    >\r\n                        add comment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    )}\r\n\r\nexport default AddCommentForm;","// libs\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n// ui\r\nimport BreadcrumbsNavigation from \"../../../ui/molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport SinglePageTitle from \"../../../ui/atoms/single-page-title/single-page-title/single-page-title\";\r\nimport Content from \"../../../ui/atoms/content/content/content\";\r\nimport CommentsList from \"../../../ui/organisms/comments-list/comments-list/comments-list\";\r\n\r\n// models, features\r\nimport AddCommentForm from \"./add-comment-form\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(7)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n        },\r\n    }\r\n}));\r\n\r\nexport const PostTemplate = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <BreadcrumbsNavigation breadLinks={props.breadcrumbsLinks} currentPageName={props.pageTitle}/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <SinglePageTitle title={props.pageTitle}/>\r\n                    <Content content={props.pageContent}/>\r\n                    <CommentsList comments={props.comments}/>\r\n                    <AddCommentForm/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default PostTemplate;","// libs\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n// ui\r\nimport LoadingPostTemplate from \"../../../ui/templates/post/loading-post/loading-post\";\r\n\r\n// models, features\r\nimport {getPost, resetPost} from \"../model/post-reducer\"\r\nimport PostTemplate from \"./post\";\r\n\r\nexport const Post = (props) => {\r\n    const currentPost = useSelector(state => state.post.currentPostData);\r\n    const isFetching = useSelector(state => state.post.postIsFetching);\r\n    const dispatch = useDispatch();\r\n    const [isEmpty, toggleIsEmpty] = useState(false);\r\n    useEffect(() => {\r\n        toggleIsEmpty(currentPost.isEmpty);\r\n    }, [currentPost.isEmpty]);\r\n    useEffect(() => {\r\n        dispatch(getPost(props.slug));\r\n        return function cleanup() {\r\n            dispatch(resetPost(props.slug));\r\n        };\r\n    }, [props.slug]);\r\n    let lastLinksId;\r\n    if(props.links.length>0)lastLinksId = props.links[props.links.length-1].id + 1;\r\n    else lastLinksId = 0;\r\n    const links = [...props.links, {id: lastLinksId, linkAddress: `/posts/${currentPost.categorySlug}`, linkText: `${currentPost.categoryName}`}];\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{currentPost.title}</title>\r\n            </Helmet>\r\n            {!isFetching && isEmpty && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingPostTemplate\r\n                    breadcrumbsLinks={links}\r\n                    pageTitle={\"\"}/>\r\n                : <PostTemplate\r\n                    comments={currentPost.comments}\r\n                    breadcrumbsLinks={links}\r\n                    pageTitle={currentPost.title}\r\n                    pageContent={currentPost.content}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default Post;","import Post from \"../../../features/post/components\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SinglePostPage = (props) => {\r\n    let {post_slug} = useParams();\r\n\r\n    const links = [];\r\n\r\n    return (\r\n        <>\r\n            <Post links={links} slug={post_slug}/>\r\n        </>\r\n)}\r\n\r\nexport default SinglePostPage;","import Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const HeaderImage = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper2: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n            backgroundImage: `url(${props.imageSrc})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"none\",\r\n            backgroundPosition: \"center center\",\r\n            minHeight: \"300px\",\r\n            borderRadius: \"0\",\r\n            filter: \"brightness(0.8)\"\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper2}></Paper>\r\n    )}\r\n\r\nexport default HeaderImage;","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HeaderImage from \"../../atoms/header-image/header-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerGrid: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport const HeaderImageBlock = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.headerGrid}>\r\n            <HeaderImage imageSrc={props.image}/>\r\n        </Grid>\r\n    )}\r\n\r\nexport default HeaderImageBlock;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.elements.main,\r\n    },\r\n    avatar: {\r\n        height: theme.spacing(6.2),\r\n        width: theme.spacing(6.2),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    tags: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n            backgroundColor: theme.palette.elements.secondary,\r\n            color: theme.palette.elements.text\r\n        },\r\n    },\r\n    chipsSkeleton: {\r\n        borderRadius: theme.spacing(2),\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(3)\r\n    },\r\n    button1: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    button2: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(3),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    image: {\r\n        height: theme.spacing(25),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    description: {\r\n        height: theme.spacing(5),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    title: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    header: {\r\n        '& .MuiCardHeader-subheader span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        },\r\n        '& .MuiCardHeader-title span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    },\r\n}));\r\n\r\nexport const LoadingPostCard = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Skeleton variant=\"circle\" className={classes.avatar}/>\r\n                    }\r\n                    title={\r\n                        <Skeleton/>\r\n                    }\r\n                    subheader={\r\n                        <Skeleton/>\r\n                    }\r\n                />\r\n                <Skeleton\r\n                    variant=\"rect\"\r\n                    animation=\"wave\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                    >\r\n                        <Skeleton className={classes.title}/>\r\n                    </Typography>\r\n                    <Skeleton variant=\"rect\" className={classes.description}/>\r\n                    <div className={classes.tags}>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\nexport default LoadingPostCard;","import Grid from '@material-ui/core/Grid';\r\nimport LoadingPostCard from \"../../../molecules/post-card/loading-post-card/loading-post-card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport const LoadingPostCards = (props) => {\r\n    const classes = useStyles();\r\n    let skeletonItems = [];\r\n    let count = 6;\r\n    if(props.count)count=props.count;\r\n    for (let i = 0; i < count; i++){\r\n        skeletonItems.push(\r\n            <Grid item md={4} sm={6} xs={12}>\r\n                <LoadingPostCard/>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={classes.root}>\r\n            {skeletonItems}\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingPostCards;","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    titleSkeleton: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    }\r\n}));\r\n\r\nexport const LoadingPageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n            <Skeleton className={classes.titleSkeleton}/>\r\n        </Typography>\r\n\r\n    )}\r\n\r\nexport default LoadingPageTitle;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingHomepagePostsTemplate = (props) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingHomepagePostsTemplate;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        filter: \"grayscale(30%)\",\r\n        \"&:hover\": {\r\n            //filter: \"grayscale(0%)\"\r\n        }\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    tags: {\r\n        marginTop: theme.spacing(2.5),\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n            backgroundColor: theme.palette.elements.secondary,\r\n            color: theme.palette.elements.text\r\n        },\r\n    },\r\n    header: {\r\n        color: theme.palette.elements.text,\r\n        '& .MuiCardHeader-subheader': {\r\n            color: theme.palette.elements.secondaryText,\r\n        }\r\n    },\r\n    root: {\r\n        backgroundColor: theme.palette.elements.main,\r\n    },\r\n    title: {\r\n        color: theme.palette.elements.text,\r\n    },\r\n    excerpt: {\r\n        color: theme.palette.elements.secondaryText,\r\n    }\r\n}));\r\n\r\nexport const PostCard = (props) => {\r\n    const classes = useStyles();\r\n    const tags = props.tags.map((tag) =>\r\n        <Chip size=\"small\" label={tag} />\r\n    );\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardActionArea component={NavLink} to={`/post/${props.slug}`}>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" src={props.author_image} className={classes.avatar}>\r\n                            E\r\n                        </Avatar>\r\n                    }\r\n                    title={props.author}\r\n                    subheader={props.date}\r\n                />\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={`${props.title} image`}\r\n                    height=\"200\"\r\n                    image={(props.image_url === null) ? \"https://ichip.ru/images/cache/2019/7/29/fit_930_519_false_crop_960_600_0_0_q90_4172_6112aacf39.jpeg\" : props.image_url}\r\n                    title=\"Contemplative Reptile\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.excerpt}>\r\n                        {props.excerpt}\r\n                    </Typography>\r\n                    <div className={classes.tags}>\r\n                        {tags}\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard;","import Grid from '@material-ui/core/Grid';\r\nimport PostCard from \"../../../molecules/post-card/post-card/post-card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    pagination: {\r\n        \"& .MuiPaginationItem-root\": {\r\n            backgroundColor: theme.palette.elements.main,\r\n            color: theme.palette.elements.text,\r\n            border: \"none\",\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.elements.secondary,\r\n            },\r\n        },\r\n        \"& .Mui-selected\": {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    }\r\n}));\r\n\r\nexport const PostCards = (props) => {\r\n    const postsItems = props.postsData.map((post) =>\r\n        <Grid item md={4} sm={6} xs={12}>\r\n            <PostCard\r\n                key={post.id}\r\n                slug={post.slug}\r\n                title={post.title}\r\n                author={post.author}\r\n                author_image={post.author_image_url}\r\n                excerpt={post.excerpt}\r\n                date={post.date}\r\n                tags={post.tags}\r\n                image_url={post.image_url}\r\n            />\r\n        </Grid>\r\n    );\r\n    const classes = useStyles();\r\n    const handleChange = (event, value) => {\r\n        props.changePage(value);\r\n    };\r\n    return (\r\n            <Grid container spacing={3} className={classes.root}>\r\n                {postsItems}\r\n                {props.pagesCount > 1 &&\r\n                    <Grid item md={12}>\r\n                        <Pagination className={classes.pagination} count={props.pagesCount} page={props.currentPage} variant=\"outlined\" onChange={handleChange} showFirstButton showLastButton/>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n    )}\r\nexport default PostCards;","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n        color: theme.palette.primary.text,\r\n    }\r\n}));\r\n\r\nexport const PageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n            {props.title}\r\n        </Typography>\r\n\r\n    )}\r\n\r\nexport default PageTitle;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nexport const HomepagePostsTemplate = (props) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            { console.log(\"TEMPLATE --- \" + props.currentPage) }\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default HomepagePostsTemplate;","import {PostAPI} from \"../../../api/posts\";\r\n\r\nconst SET_POSTS = \"setPosts\";\r\nconst RESET_POSTS = \"resetPosts\";\r\nconst SET_POSTS_FROM_SEARCH = \"setPostsFromSearch\";\r\nconst POSTS_TOGGLE_IS_FETCHING = \"postsToggleIsFetching\";\r\nconst SET_FOUND_POSTS_ADDITIONAL_DATA = \"setFoundPostsAdditionalData\";\r\nconst SET_CATEGORY = \"setCategory\";\r\nconst POSTS_TOGGLE_IS_FOUND = \"postsToggleIsFound\";\r\nconst SET_POSTS_PAGES_COUNT = \"setPostsPagesCount\";\r\n\r\nconst setPostsPagesCount = (pagesCount) => ({\r\n    type: SET_POSTS_PAGES_COUNT,\r\n    pagesCount\r\n})\r\nconst postsToggleIsFound = (isFound) => ({\r\n    type: POSTS_TOGGLE_IS_FOUND,\r\n    isFound\r\n})\r\nexport const resetPosts = () => ({\r\n    type: RESET_POSTS\r\n})\r\nconst setPostsFromSearch = (posts) => ({\r\n    type: SET_POSTS_FROM_SEARCH,\r\n    posts\r\n})\r\nconst setCategory = (category) => ({\r\n    type: SET_CATEGORY,\r\n    category\r\n})\r\nconst setPosts = (posts) => ({\r\n    type: SET_POSTS,\r\n    posts\r\n})\r\nconst postsToggleIsFetching = (isFetching) => ({\r\n    type: POSTS_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nconst setFoundPostsAdditionalData = (data, elemIndex) => ({\r\n    type: SET_FOUND_POSTS_ADDITIONAL_DATA,\r\n    data,\r\n    elemIndex\r\n})\r\n\r\nexport const getPosts = (category_slug, page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const categories = await PostAPI.getCategoryName(category_slug);\r\n    if (categories.length > 0){\r\n        dispatch(postsToggleIsFound(true));\r\n        const category = categories[0].name;\r\n        dispatch(setCategory(category));\r\n        const response = await PostAPI.getPosts(category, getState().posts.postsPerPage, page);\r\n        if(Array.isArray(response.data)){\r\n            dispatch(setPostsPagesCount(Math.ceil(response.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n            dispatch(setPosts(response.data));\r\n        }\r\n        else {\r\n            dispatch(postsToggleIsFound(false));\r\n        }\r\n    }\r\n    else dispatch(postsToggleIsFound(false));\r\n    dispatch(postsToggleIsFetching(false));\r\n}\r\nexport const getAllPosts = (page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const response = await PostAPI.getAllPosts(getState().posts.postsPerPage, page);\r\n    if(Array.isArray(response.data)){\r\n        dispatch(setPostsPagesCount(Math.ceil(response.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n        dispatch(setPosts(response.data));\r\n        dispatch(postsToggleIsFetching(false));\r\n    }\r\n    else{\r\n        dispatch(postsToggleIsFound(false));\r\n    }\r\n}\r\nexport const getFoundPosts = (searchRequest, page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const foundPostsResponse = await PostAPI.getFoundPosts(searchRequest, getState().posts.postsPerPage, page);\r\n    if(Array.isArray(foundPostsResponse.data)){\r\n        dispatch(setPostsPagesCount(Math.ceil(foundPostsResponse.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n        dispatch(setPostsFromSearch(foundPostsResponse.data));\r\n        const dataLength = getState().posts.postsData.length;\r\n        if(dataLength > 0) {\r\n            getState().posts.postsData.map( async (elem, index) => { // МОЖНО ЗАМЕНИТЬ НА FOR\r\n                const authorData = await PostAPI.getByQuery(elem.author_request); // get author info\r\n                let authorName = authorData.name;\r\n                let authorAvatar = authorData.avatar_urls[\"48\"];\r\n                const tagsData = await PostAPI.getByQuery(elem.tags_request); // get tags\r\n                let tags = tagsData.map(elem => elem.name);\r\n                let imageSrc;\r\n                if(elem.image_request !== \"\") { // if image not empty\r\n                    let imageData = await PostAPI.getByQuery(elem.image_request); // get image\r\n                    imageSrc = imageData.media_details[\"sizes\"].medium_large.source_url;\r\n                }\r\n                else{\r\n                    imageSrc = null;\r\n                }\r\n                dispatch(setFoundPostsAdditionalData({\r\n                    author: {authorName, authorAvatar},\r\n                    imageSrc,\r\n                    tags\r\n                }, index))\r\n                if(index+1 === dataLength){\r\n                    dispatch(postsToggleIsFetching(false));\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            dispatch(postsToggleIsFetching(false));\r\n        }\r\n    }\r\n    else {\r\n        dispatch(postsToggleIsFetching(false));\r\n    }\r\n}\r\n\r\nlet InitialState = {\r\n    postsPerPage: 9,\r\n    postsPagesCount: 1,\r\n    postsIsFetching: true,\r\n    postsData: [],\r\n    isCategoryFound: true,\r\n};\r\n\r\nconst postsReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_POSTS_PAGES_COUNT:\r\n            stateCopy = {\r\n                ...state,\r\n                postsPagesCount: action.pagesCount\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case POSTS_TOGGLE_IS_FOUND:\r\n            stateCopy = {\r\n                ...state,\r\n                isCategoryFound: action.isFound\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case RESET_POSTS:\r\n            stateCopy = {\r\n                ...state,\r\n                postsPagesCount: 1,\r\n                postsIsFetching: true,\r\n                postsData: [],\r\n                isCategoryFound: true,\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_CATEGORY:\r\n            stateCopy = {\r\n                ...state,\r\n                categoryName: action.category\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_POSTS:\r\n            if(action.posts != []){\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: action.posts.map(elem => (\r\n                        {\r\n                            id: elem.id,\r\n                            slug: elem.slug,\r\n                            date: elem.date.replace(\"T\", \" \"),\r\n                            title: elem.title.rendered,\r\n                            excerpt: elem.excerpt.rendered,\r\n                            author: elem._embedded.author[0].name,\r\n                            author_image_url: elem._embedded.author[0].avatar_urls[\"48\"],\r\n                            tags: elem._embedded[\"wp:term\"][1].map(elem2 => (elem2.name)),\r\n                            image_url:\r\n                                elem.featured_media !== 0\r\n                                    ? elem._embedded[\"wp:featuredmedia\"][0].media_details.sizes.medium_large.source_url\r\n                                    : null,\r\n                        }\r\n                    ))};\r\n            }\r\n            else{\r\n                stateCopy = {\r\n                    ...state, postsData: []\r\n                };\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_POSTS_FROM_SEARCH:\r\n            if(action.posts != []){\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: action.posts.map(elem => {\r\n                        if (elem._embedded.self[0].type === \"post\") {\r\n                            let imgReq;\r\n                            if(elem._embedded.self[0].featured_media > 0) imgReq = elem._embedded.self[0]._links[\"wp:featuredmedia\"][0].href;\r\n                            else imgReq = \"\";\r\n                            return {\r\n                                id: elem._embedded.self[0].id,\r\n                                slug: elem._embedded.self[0].slug,\r\n                                date: elem._embedded.self[0].date.replace(\"T\", \" \"),\r\n                                title: elem._embedded.self[0].title.rendered,\r\n                                excerpt: elem._embedded.self[0].excerpt.rendered,\r\n                                author: \"\",\r\n                                author_image_url: \"\",\r\n                                tags: [],\r\n                                image_url: null,\r\n                                author_request: elem._embedded.self[0]._links.author[0].href, // get a api link to get data\r\n                                image_request: imgReq, // get a api link to get data\r\n                                tags_request: elem._embedded.self[0]._links[\"wp:term\"][1].href, // get a api link to get data\r\n                            }\r\n                        }\r\n                    }).filter(elem => {\r\n                        return elem !== undefined && elem !== null;\r\n                    })};\r\n            }\r\n            else{\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: []\r\n                };\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_FOUND_POSTS_ADDITIONAL_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                postsData: state.postsData.map((elem,index)=>{\r\n                    if(index===action.elemIndex){\r\n                        elem.author = action.data.author.authorName;\r\n                        elem.author_image_url = action.data.author.authorAvatar;\r\n                        elem.image_url = action.data.imageSrc;\r\n                        elem.tags = action.data.tags;\r\n                        return elem;\r\n                    }\r\n                    return elem;\r\n                })}\r\n            return stateCopy;\r\n            break;\r\n        case POSTS_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                postsIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default postsReducer;","// libs\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\n// ui\r\nimport LoadingHomepagePostsTemplate from \"../../../ui/templates/homepage-posts/loading-homepage-posts/loading-homepage-posts\";\r\nimport HomepagePostsTemplate from \"../../../ui/templates/homepage-posts/homepage-posts/homepage-posts\";\r\n\r\n// models\r\nimport {getAllPosts, resetPosts} from \"../model/posts-reducer\"\r\n\r\nexport const AllPostsPage = (props) => {\r\n    let history = useHistory();\r\n    const [isNotFound, toggleIsNotFound] = useState(false);\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const isCategoryFound = useSelector(state => state.posts.isCategoryFound);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const currentPage = useSelector(state => state.posts.postsPage);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPosts(props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.pageNum]);\r\n    useEffect(() => {\r\n        toggleIsNotFound(!isCategoryFound);\r\n    }, [isCategoryFound]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/${pageNum}`);\r\n    }\r\n    {console.log(\"FEATURE --- \" + currentPage)}\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{props.pageName}</title>\r\n            </Helmet>\r\n            {isNotFound && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingHomepagePostsTemplate headerImage={props.image} postsPerPage={postsPerPage}/>\r\n                : <HomepagePostsTemplate headerImage={props.image} postsData={posts} pageName={props.pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default AllPostsPage;","export default __webpack_public_path__ + \"static/media/ocean.54e5e1bb.jpg\";","import AllPostsPage from \"../../features/posts/components/all-posts-page\";\r\nimport ocean from \"../../include/images/ocean.jpg\"\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const Homepage = (props) => {\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <AllPostsPage categoryName=\"без рубрики\" pageName=\"Homepage\" image={ocean} pageNum={pageNum}/>\r\n    )}\r\n\r\nexport default Homepage;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nconst breadcrumbsLinks = [\r\n];\r\n\r\nexport const CategoryPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <BreadcrumbsNavigation breadLinks={breadcrumbsLinks} currentPageName={props.pageName}/>\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default CategoryPostsTemplate;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingCategoryPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingBreadcrumbsNavigation/>\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingCategoryPostsTemplate;","// libs\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\n// ui\r\nimport CategoryPostsTemplate from \"../../../ui/templates/category-posts/category-posts/category-posts\";\r\nimport LoadingCategoryPostsTemplate from \"../../../ui/templates/category-posts/loading-category-posts/loading-category-posts\";\r\n\r\n// models\r\nimport {getPosts, resetPosts} from \"../model/posts-reducer\"\r\n\r\nexport const CategoryPostsPage = (props) => {\r\n    let history = useHistory();\r\n    const [isNotFound, toggleIsNotFound] = useState(false);\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pageName = useSelector(state => state.posts.categoryName);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const isCategoryFound = useSelector(state => state.posts.isCategoryFound);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts(props.categorySlug, props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.categorySlug, props.pageNum]);\r\n    useEffect(() => {\r\n        toggleIsNotFound(!isCategoryFound);\r\n    }, [isCategoryFound]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/posts/${props.categorySlug}/${pageNum}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{pageName}</title>\r\n            </Helmet>\r\n            {isNotFound && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingCategoryPostsTemplate postsPerPage={postsPerPage} headerImage={props.image}/>\r\n                : <CategoryPostsTemplate headerImage={props.image} postsData={posts} pageName={pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default CategoryPostsPage;","export default __webpack_public_path__ + \"static/media/gory.0dc798df.png\";","import CategoryPostsPage from \"../../features/posts/components/category-posts-page\";\r\nimport gory from \"../../include/images/gory.png\"\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const CategoryPage = (props) => {\r\n    let {category_slug} = useParams();\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <CategoryPostsPage categorySlug={category_slug} pageNum={pageNum} image={gory}/>\r\n    )}\r\n\r\nexport default CategoryPage;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport SinglePageTitle from \"../../../atoms/single-page-title/single-page-title/single-page-title\";\r\nimport Content from \"../../../atoms/content/content/content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(7)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n        },\r\n    }\r\n}));\r\n\r\nexport const PageTemplate = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <BreadcrumbsNavigation breadLinks={props.breadcrumbsLinks} currentPageName={props.pageTitle}/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <SinglePageTitle title={props.pageTitle}/>\r\n                    <Content content={props.pageContent}/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default PageTemplate;","import PageTemplate from \"../../ui/templates/page/page/page\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst links = [];\r\nconst title = \"Page not found\";\r\n\r\nexport const NotFoundPage = (props) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n       <PageTemplate\r\n                breadcrumbsLinks={links}\r\n                isFetching={false}\r\n                pageTitle={title}\r\n                pageContent={\"\"}/>\r\n    </>\r\n)\r\n\r\nexport default NotFoundPage;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingFoundPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingBreadcrumbsNavigation/>\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingFoundPostsTemplate;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nconst breadcrumbsLinks = [\r\n];\r\n\r\nexport const FoundPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <BreadcrumbsNavigation breadLinks={breadcrumbsLinks} currentPageName={props.pageName}/>\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default FoundPostsTemplate;","// libs\r\nimport {useEffect} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n// ui\r\nimport LoadingFoundPostsTemplate from \"../../../ui/templates/found-posts/loading-found-posts/loading-found-posts\";\r\nimport FoundPostsTemplate from \"../../../ui/templates/found-posts/found-posts/found-posts\";\r\n\r\n// models\r\nimport {getFoundPosts, resetPosts} from \"../model/posts-reducer\"\r\n\r\nexport const FoundPostsPage = (props) => {\r\n    let history = useHistory();\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getFoundPosts(props.searchRequest, props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.searchRequest, props.pageNum]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/search/${props.searchRequest}/${pageNum}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{props.pageName}</title>\r\n            </Helmet>\r\n            {isFetching\r\n                ? <LoadingFoundPostsTemplate postsPerPage={postsPerPage} headerImage={props.image}/>\r\n                : <FoundPostsTemplate headerImage={props.image} postsData={posts} pageName={props.pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default FoundPostsPage;","export default __webpack_public_path__ + \"static/media/forest.d3b3a05b.jpeg\";","import FoundPostsPage from \"../../features/posts/components/found-posts-page\";\r\nimport forest from \"../../include/images/forest.jpeg\"\r\nimport NotFoundPage from \"../404/page\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SearchPostsPage = (props) => {\r\n    let {request} = useParams();\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <>\r\n            {request.length > 0\r\n                    ? <FoundPostsPage pageName={\"Search for: \" + request} searchRequest={request} pageNum={pageNum} image={forest}/>\r\n                    : <NotFoundPage/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default SearchPostsPage;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport LoadingSinglePageTitle\r\n    from \"../../../atoms/single-page-title/loading-single-page-title/loading-single-page-title\";\r\nimport LoadingContent from \"../../../atoms/content/loading-content/loading-content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    contentSkeleton: {\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\nconsole.log(\"da\");\r\n\r\nexport const LoadingPageTemplate = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <LoadingBreadcrumbsNavigation/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <LoadingSinglePageTitle/>\r\n                    <LoadingContent/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default LoadingPageTemplate;","import {PageAPI} from \"../../../api/posts\";\r\n\r\nconst SET_PAGE = \"setPage\";\r\nconst SET_EMPTY_PAGE = \"setEmptyPage\";\r\nconst PAGE_TOGGLE_IS_FETCHING = \"pageToggleIsFetching\";\r\nconst RESET_PAGE = \"resetPage\";\r\n\r\nconst setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nconst setEmptyPage = () => ({\r\n    type: SET_EMPTY_PAGE\r\n})\r\nexport const resetPage = () => ({\r\n    type: RESET_PAGE\r\n})\r\nexport const pageToggleIsFetching = (isFetching) => ({\r\n    type: PAGE_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getPage = (slug) => async (dispatch) => {\r\n    dispatch(pageToggleIsFetching(true));\r\n    const data = await PageAPI.getPage(slug);\r\n    if(data.length === 0) {\r\n        dispatch(setEmptyPage());\r\n    }\r\n    else{\r\n        dispatch(setPage(data));\r\n    }\r\n    dispatch(pageToggleIsFetching(false));\r\n}\r\n\r\nlet InitialState = {\r\n    pageIsFetching: true,\r\n    currentPageData: {\r\n        isEmpty: false,\r\n        id: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        comments: []\r\n    }\r\n};\r\n\r\nconst pageReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPageData: {\r\n                    isEmpty: false,\r\n                    id: action.page[0].id,\r\n                    title: action.page[0].title.rendered,\r\n                    content: action.page[0].content.rendered,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_EMPTY_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPageData: {\r\n                    isEmpty: true,\r\n                    id: \"\",\r\n                    title: \"\",\r\n                    content: \"\",\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case RESET_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                pageIsFetching: true\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case PAGE_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                pageIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default pageReducer;","// libs\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\n\r\n// ui\r\nimport PageTemplate from \"../../../ui/templates/page/page/page\";\r\nimport LoadingPageTemplate from \"../../../ui/templates/page/loading-page/loading-page\";\r\n\r\n// models\r\nimport {getPage, resetPage} from \"../model/page-reducer\"\r\n\r\nexport const Page = (props) => {\r\n    const currentPage = useSelector(state => state.page.currentPageData);\r\n    const isFetching = useSelector(state => state.page.pageIsFetching);\r\n    const dispatch = useDispatch();\r\n    const [isEmpty, toggleIsEmpty] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getPage(props.slug));\r\n        return function cleanup() {\r\n            dispatch(resetPage());\r\n        };\r\n    }, [props.slug]);\r\n    useEffect(() => {\r\n        toggleIsEmpty(currentPage.isEmpty);\r\n    }, [currentPage.isEmpty]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{currentPage.title}</title>\r\n            </Helmet>\r\n            {!isFetching && isEmpty && <Redirect to=\"/404\" />}\r\n            {isFetching ?\r\n                <LoadingPageTemplate\r\n                    breadcrumbsLinks={props.links}\r\n                    pageTitle={\"\"}/> :\r\n                <PageTemplate\r\n                    breadcrumbsLinks={props.links}\r\n                    pageTitle={currentPage.title}\r\n                    pageContent={currentPage.content}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default Page;","import SinglePostPage from \"./posts/post/page\";\r\nimport Homepage from \"./index/page\";\r\nimport CategoryPage from \"./posts/page\";\r\nimport NotFoundPage from \"./404/page\";\r\nimport SearchPostsPage from \"./search/page\"\r\nimport SinglePage from \"./page/page\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: \"/404\",\r\n        exact: true,\r\n        component: NotFoundPage\r\n    },\r\n    {\r\n        path: \"/:pageNum?\",\r\n        exact: true,\r\n        component: Homepage,\r\n    },\r\n    {\r\n        path: \"/page/:slug\",\r\n        exact: true,\r\n        component: SinglePage\r\n    },\r\n    {\r\n        path: \"/posts/:category_slug/:pageNum?\",\r\n        exact: true,\r\n        component: CategoryPage\r\n    },\r\n    {\r\n        path: \"/post/:post_slug\",\r\n        exact: true,\r\n        component: SinglePostPage\r\n    },\r\n    {\r\n        path: \"/search/:request/:pageNum?\",\r\n        exact: true,\r\n        component: SearchPostsPage\r\n    },\r\n    {\r\n        component: NotFoundPage\r\n    },\r\n];\r\n\r\n// header menu links\r\nexport const links = [\r\n    {id: 1, linkAddress: \"/posts/about-projects\", linkText: \"Projects\"},\r\n    {id: 2, linkAddress: \"/page/about-me\", linkText: \"About me (CV)\"},\r\n    {id: 3, linkAddress: \"/posts/demo\", linkText: \"Demo\"},\r\n    {id: 4, linkAddress: \"/404\", linkText: \"404\"},\r\n];\r\n","import Page from \"../../features/single-page/components\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SinglePage = (props) => {\r\n    let {slug} = useParams();\r\n\r\n    const links = [];\r\n\r\n    return (\r\n        <>\r\n            <Page links={links} slug={slug}/>\r\n        </>\r\n    )}\r\n\r\nexport default SinglePage;","// libs\r\nimport {List} from '@material-ui/core';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\n// ui\r\nimport MenuLink from \"../../../ui/atoms/menu-link/menu-link\";\r\n\r\n// models, features\r\nimport {toggleIsMobileMenuActive} from \"../../globalSettings/model/global-reducer\";\r\nimport {ToggleThemeButtonMobile} from \"../toggle-theme/toggle-theme\";\r\nimport SearchForm from \"../search-form/search-form\";\r\n\r\n// pages\r\nimport {links} from \"../../../pages\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.elements.main,\r\n        color: theme.palette.elements.text,\r\n        zIndex: 9999,\r\n    },\r\n    posFixed: {\r\n        position: \"fixed\",\r\n    }\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component={NavLink} {...props} />;\r\n}\r\n\r\nexport const MobileMenu = (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const isMobileMenuActive = useSelector(state => state.global.is_mobile_menu_active)\r\n    const menuLinks = links.map((link) => (\r\n                <ListItemLink key={link.id} to={link.linkAddress} onClick={() => {dispatch(toggleIsMobileMenuActive(false))}}>\r\n                    <ListItemText primary={link.linkText} />\r\n                </ListItemLink>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className={`${classes.root} ${props.position===\"fixed\" && classes.posFixed}`}>\r\n            {isMobileMenuActive &&\r\n                <>\r\n                    <List>\r\n                        {menuLinks}\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ToggleThemeButtonMobile/>\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <SearchForm/>\r\n                    </List>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const DesktopMenu = () => {\r\n    const menuLinks = links.map((link) =>\r\n        <MenuLink linkTo={link.linkAddress} linkText={link.linkText} key={link.id}/>\r\n    );\r\n    return (\r\n        <Box>\r\n            {menuLinks}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const MobileHamburgerIcon = () => {\r\n    const dispatch = useDispatch();\r\n    const isMobileMenuActive = useSelector(state => state.global.is_mobile_menu_active);\r\n\r\n    return (\r\n        <IconButton onClick={() => {\r\n            if(isMobileMenuActive)dispatch(toggleIsMobileMenuActive(false))\r\n            else dispatch(toggleIsMobileMenuActive(true))\r\n        }}>\r\n            <MenuIcon fontSize=\"large\" style={{ color: grey[100] }}/>\r\n        </IconButton>\r\n    )\r\n}","// libs\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\n\r\nexport const HideOnScroll = (props) => {\r\n    const { children, isDisable } = props;\r\n    const trigger = useScrollTrigger();\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={isDisable ? true : !trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}","// libs\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\n// ui\r\nimport LogoWithNavLink from \"../../ui/atoms/logo/logo\";\r\n\r\n// models, features\r\nimport {ToggleThemeButton} from \"./toggle-theme/toggle-theme\";\r\nimport {DesktopMenu, MobileHamburgerIcon, MobileMenu} from \"./header-menu/header-menu\";\r\nimport SearchForm from \"./search-form/search-form\";\r\nimport {HideOnScroll} from \"./hide-on-scroll/hide-on-scroll\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolBar: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        minHeight: theme.spacing(7.5),\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n    }\r\n}));\r\n\r\nexport const Header = (props) => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n    const isMobileMenuActive = useSelector(state => state.global.is_mobile_menu_active)\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n            <HideOnScroll {...props} isDisable={isMobileMenuActive}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Container position=\"fixed\">\r\n                        <Toolbar className={classes.toolBar}>\r\n                            <LogoWithNavLink logoText=\"Edlay.net\"/>\r\n                            {!matches\r\n                                ?\r\n                                    <>\r\n                                        <DesktopMenu/>\r\n                                        <Box className={classes.box}>\r\n                                            <ToggleThemeButton/>\r\n                                            <SearchForm/>\r\n                                        </Box>\r\n                                    </>\r\n                                : <MobileHamburgerIcon/>\r\n                            }\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            {matches && <MobileMenu position=\"fixed\"/>}\r\n        </>\r\n    )\r\n}","// libs\nimport {MapRoutes} from \"./lib/routes\";\nimport { makeStyles } from '@material-ui/core/styles';\n\n// ui\nimport './App.css';\nimport FooterTemplate from \"./ui/organisms/footer/footer\";\n\n// models, features, pages\nimport withTheme from \"./features/theme-options/with-theme-hok\";\nimport {Header} from \"./features/header/header\";\nimport {routes} from \"./pages/index\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(7.5),\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: `100vh`,\n        backgroundColor: theme.palette.primary.background,\n    },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.root}>\n          <Header/>\n          <MapRoutes routes={routes} state={props.state}/>\n          <FooterTemplate/>\n      </div>\n  );\n}\n\nexport default withTheme(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    BrowserRouter as Router, HashRouter\n} from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {Provider} from \"react-redux\";\nimport {\n    applyMiddleware,\n    combineReducers,\n    createStore\n} from 'redux';\nimport thunk from \"redux-thunk\";\nimport postsReducer from \"./features/posts/model/posts-reducer\";\nimport postReducer from \"./features/post/model/post-reducer\";\nimport pageReducer from \"./features/single-page/model/page-reducer\";\nimport globalReducer from \"./features/globalSettings/model/global-reducer\";\n\nlet reducers = combineReducers({\n    posts: postsReducer,\n    post: postReducer,\n    page: pageReducer,\n    global: globalReducer,\n});\nlet store = createStore(\n    reducers,\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <CssBaseline />\n          <Provider store={store}>\n              <App state={store.getState()}/>\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}