{"version":3,"sources":["ui/molecules/breadcrumbs/breadcrumbs/breadcrumbs.js","ui/atoms/single-page-title/single-page-title/single-page-title.js","ui/atoms/content/content/content.js","ui/molecules/comment/comment/comment.js","ui/organisms/comments-list/comments-list/comments-list.js","api/posts.js","features/post/model/post-reducer.js","features/post/components/add-comment-form.js","features/post/components/post.js","ui/molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs.js","ui/molecules/comment/loading-comment/loading-comment.js","ui/organisms/comments-list/loading-comments-list/loading-comments-list.js","ui/atoms/single-page-title/loading-single-page-title/loading-single-page-title.js","ui/atoms/content/loading-content/loading-content.js","ui/templates/post/loading-post/loading-post.js","features/post/components/index.js","pages/posts/post/page.js","ui/atoms/header-image/header-image.js","ui/molecules/header-image/header-image.js","ui/molecules/post-card/loading-post-card/loading-post-card.js","ui/organisms/post-cards/loading-post-cards/loading-post-cards.js","ui/atoms/page-title/loading-page-title/loading-page-title.js","ui/templates/homepage-posts/loading-homepage-posts/loading-homepage-posts.js","ui/molecules/post-card/post-card/post-card.js","ui/organisms/post-cards/post-cards/post-cards.js","ui/atoms/page-title/page-title/page-title.js","ui/templates/homepage-posts/homepage-posts/homepage-posts.js","features/posts/model/posts-reducer.js","features/posts/components/all-posts-page.js","include/images/ocean.jpg","pages/index/page.js","ui/templates/category-posts/category-posts/category-posts.js","ui/templates/category-posts/loading-category-posts/loading-category-posts.js","features/posts/components/category-posts-page.js","include/images/gory.png","pages/posts/page.js","ui/templates/page/page/page.js","pages/404/page.js","ui/templates/found-posts/loading-found-posts/loading-found-posts.js","ui/templates/found-posts/found-posts/found-posts.js","features/posts/components/found-posts-page.js","include/images/forest.jpeg","pages/search/page.js","ui/templates/page/loading-page/loading-page.js","features/single-page/model/page-reducer.js","features/single-page/components/index.js","pages/index.js","pages/page/page.js","features/globalSettings/model/global-reducer.js","features/header/toggle-theme/toggle-theme.js","ui/atoms/menu-link/menu-link.js","ui/molecules/search-input-with-icon/search-input-with-icon.js","features/header/search-form/search-form.js","features/header/header-menu/header-menu.js","features/header/hide-on-scroll/hide-on-scroll.js","ui/atoms/logo/logo.js","features/header/header.js","lib/routes/index.js","ui/organisms/footer/footer.js","ui/theme-options.js","features/theme-options/with-theme-hok.js","App.js","reportWebVitals.js","index.js"],"names":["StyledBreadcrumb","withStyles","theme","root","color","palette","elements","text","backgroundColor","secondary","height","spacing","fontWeight","typography","fontWeightRegular","emphasize","cursor","boxShadow","shadows","icon","Chip","useStyles","makeStyles","breadCrumbs","marginBottom","handleClick","event","preventDefault","BreadcrumbsNavigation","props","classes","breadLinks","map","link","component","NavLink","to","linkAddress","label","linkText","key","Breadcrumbs","aria-label","className","fontSize","currentPageName","onClick","title","primary","SinglePageTitle","Typography","align","variant","content","marginTop","lineHeight","maxWidth","filter","type","links","main","hover","visited","borderRadius","padding","border","borderColor","Content","Container","dangerouslySetInnerHTML","__html","avatar","paddingTop","header","secondaryText","comment","Comment","Card","CardHeader","Avatar","src","author_image","author","subheader","date","CardContent","CommentsList","comments","author_image_url","id","instance","axios","baseURL","PostAPI","category","perPage","pageNum","get","then","response","catch","error","data","searchText","categorySlug","slug","postId","query","post","PageAPI","SET_POST","SET_EMPTY_POST","RESET_POST","SET_COMMENTS","POST_TOGGLE_IS_FETCHING","COMMENTS_TOGGLE_IS_FETCHING","setComments","postToggleIsFetching","isFetching","commentsToggleIsFetching","InitialState","postIsFetching","commentsIsFetching","currentPostData","isEmpty","categoryName","postReducer","state","action","rendered","_embedded","name","elem","author_name","author_avatar_urls","replace","paddingBottom","formCard","paddingLeft","paddingRight","form","dark","input1","marginRight","input2","button","buttons","hoverText","progress","AddCommentForm","useState","isShow","message","changeMessage","dispatch","useDispatch","useSelector","useForm","mode","register","handleSubmit","setError","errors","setValue","done","CircularProgress","noValidate","autoComplete","onSubmit","commentData","getState","a","commentsData","addComment","TextField","author_email","inputRef","required","pattern","margin","placeholder","maxLength","fullWidth","multiline","rows","Button","startIcon","contentWrapper","pageWrapper","PostTemplate","breadcrumbsLinks","pageTitle","pageContent","grey","chipsSkeleton","width","LoadingBreadcrumbsNavigation","Skeleton","description","LoadingComment","LoadingCommentsList","skeletonItems","i","push","titleSkeleton","LoadingSinglePageTitle","contentSkeleton","LoadingContent","animation","LoadingPostTemplate","Post","lastLinksId","currentPost","toggleIsEmpty","useEffect","length","Helmet","SinglePostPage","post_slug","useParams","HeaderImage","paper2","textAlign","backgroundImage","imageSrc","backgroundSize","backgroundRepeat","backgroundPosition","minHeight","Paper","headerGrid","HeaderImageBlock","Grid","item","xs","image","tags","display","justifyContent","flexWrap","button1","marginLeft","button2","LoadingPostCard","CardActionArea","gutterBottom","LoadingPostCards","count","md","sm","container","LoadingPageTitle","LoadingHomepagePostsTemplate","headerImage","postsPerPage","excerpt","PostCard","tag","size","CardMedia","alt","image_url","pagination","PostCards","postsItems","postsData","pagesCount","Pagination","page","currentPage","onChange","value","changePage","showFirstButton","showLastButton","PageTitle","HomepagePostsTemplate","console","log","pageName","SET_POSTS","RESET_POSTS","SET_POSTS_FROM_SEARCH","POSTS_TOGGLE_IS_FETCHING","SET_FOUND_POSTS_ADDITIONAL_DATA","SET_CATEGORY","POSTS_TOGGLE_IS_FOUND","SET_POSTS_PAGES_COUNT","setPostsPagesCount","postsToggleIsFound","isFound","resetPosts","setCategory","setPosts","posts","postsToggleIsFetching","postsPagesCount","postsIsFetching","isCategoryFound","postsReducer","avatar_urls","elem2","featured_media","media_details","sizes","medium_large","source_url","imgReq","self","_links","href","author_request","image_request","tags_request","undefined","index","elemIndex","authorName","authorAvatar","AllPostsPage","history","useHistory","isNotFound","toggleIsNotFound","postsPage","Array","isArray","Math","ceil","headers","Homepage","ocean","CategoryPostsTemplate","LoadingCategoryPostsTemplate","CategoryPostsPage","category_slug","categories","CategoryPage","gory","PageTemplate","NotFoundPage","LoadingFoundPostsTemplate","FoundPostsTemplate","FoundPostsPage","searchRequest","foundPostsResponse","dataLength","authorData","tagsData","imageData","SearchPostsPage","request","forest","LoadingPageTemplate","SET_PAGE","SET_EMPTY_PAGE","PAGE_TOGGLE_IS_FETCHING","RESET_PAGE","pageToggleIsFetching","pageIsFetching","currentPageData","pageReducer","Page","routes","path","exact","TOGGLE_THEME_TYPE","TOGGLE_IS_MOBILE_MENU_ACTIVE","toggleThemeType","themeType","toggleIsMobileMenuActive","isActive","is_theme_type_fetching","theme_type","is_mobile_menu_active","globalReducer","ToggleThemeButton","global","IconButton","Brightness3","style","BrightnessLow","ToggleThemeButtonMobile","ListItem","ListItemText","menuItem","common","white","paddingBlock","MenuLink","Link","linkTo","search","position","shape","fade","breakpoints","up","searchIcon","pointerEvents","alignItems","inputRoot","inputInput","transition","transitions","create","SearchInputWithIcon","onKeyDown","onKeyPress","InputBase","onChangeSearchText","input","inputValue","inputProps","SearchForm","e","keyCode","target","ListItemLink","MobileMenu","isMobileMenuActive","menuLinks","List","Divider","DesktopMenu","Box","MobileHamburgerIcon","HideOnScroll","children","window","trigger","useScrollTrigger","Slide","appear","direction","in","logoLink","textDecoration","LogoWithNavLink","logoText","toolBar","appBar","box","Header","useTheme","matches","useMediaQuery","down","AppBar","Toolbar","RouteWithSubRoutes","route","render","MapRoutes","mapRoutes","useCopyrightStyles","copyright","Copyright","Date","getFullYear","useFooterStyles","footer","FooterTemplate","lightTheme","createMuiTheme","light","background","darkTheme","withTheme","Component","ThemeProvider","flexDirection","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.02f147da.chunk.js","sourcesContent":["import HomeIcon from \"@material-ui/icons/Home\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport {emphasize, makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.elements.text,\r\n        backgroundColor: theme.palette.elements.secondary,\r\n        height: theme.spacing(3),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: emphasize(theme.palette.elements.secondary, 0.12),\r\n            cursor: \"pointer\"\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.elements.secondary, 0.20),\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.elements.text\r\n    }\r\n}))(Chip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadCrumbs: {\r\n        color: theme.palette.elements.text,\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nfunction handleClick(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nexport const BreadcrumbsNavigation = (props) => {\r\n    const classes = useStyles();\r\n    const breadLinks = props.breadLinks.map((link) =>\r\n        <StyledBreadcrumb component={NavLink} to={link.linkAddress} label={link.linkText} key={link.key}/>\r\n    );\r\n\r\n    return(\r\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadCrumbs}>\r\n            <StyledBreadcrumb\r\n                component={NavLink}\r\n                to=\"/\"\r\n                label=\"Home\"\r\n                icon={<HomeIcon className={classes.icon} fontSize=\"small\" />}\r\n            />\r\n            {breadLinks}\r\n            <StyledBreadcrumb label={props.currentPageName} onClick={handleClick}/>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default BreadcrumbsNavigation;","import Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        color: theme.palette.primary.text,\r\n    }\r\n}));\r\n\r\n\r\nexport const SinglePageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\" className={classes.title}>\r\n            {props.title}\r\n        </Typography>\r\n    )}\r\n\r\nexport default SinglePageTitle;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    content: {\r\n        color: theme.palette.elements.text,\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n            filter: theme.type === \"dark\" && \"brightness(20%)\",\r\n        },\r\n        '& a': {\r\n            color: theme.palette.links.main,\r\n        },\r\n        '& a:hover': {\r\n            color: theme.palette.links.hover,\r\n        },\r\n        '& a:visited': {\r\n            color: theme.palette.links.visited,\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n            borderColor: theme.palette.secondary.main,\r\n        },\r\n    }\r\n}));\r\n\r\nexport const Content = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={classes.content}>\r\n                <div className=\"question-text\" dangerouslySetInnerHTML={{__html: props.content}}/>\r\n            </div>\r\n        </Container>\r\n    )}\r\n\r\nexport default Content;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: theme.palette.elements.main\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    content: {\r\n        paddingTop: theme.spacing(0),\r\n    },\r\n    header: {\r\n        color: theme.palette.elements.text,\r\n        '& .MuiCardHeader-subheader': {\r\n            color: theme.palette.elements.secondaryText,\r\n        }\r\n    },\r\n    comment: {\r\n        color: theme.palette.elements.text,\r\n    }\r\n}));\r\n\r\nexport const Comment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" src={props.author_image} className={classes.avatar}>\r\n                            E\r\n                        </Avatar>\r\n                    }\r\n                    title={props.author}\r\n                    subheader={props.date}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography className={classes.comment} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.comment}\r\n                    </Typography>\r\n                </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Comment;","import Comment from \"../../../molecules/comment/comment/comment\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport const CommentsList = (props) => {\r\n\r\n    const comments = props.comments.map((comment) =>\r\n            <Comment\r\n                key={comment.id}\r\n                author={comment.author}\r\n                author_image={comment.author_image_url}\r\n                date={comment.date}\r\n                comment={comment.comment}\r\n            />\r\n    );\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            {comments}\r\n        </Container>\r\n    )}\r\n\r\nexport default CommentsList;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://wp.edlay.net/wp-json/wp/v2/'\r\n});\r\n\r\nexport const PostAPI = {\r\n    getPosts: (category, perPage = 10, pageNum = 1) =>{\r\n        return instance.get(`posts/?per_page=${perPage}&page=${pageNum}&category_name=${category}&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getAllPosts: (perPage = 10, pageNum = 1) => {\r\n        return instance.get(`posts/?per_page=${perPage}&page=${pageNum}&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getFoundPosts: (searchText, perPage = 10, pageNum = 1) => {\r\n        return instance.get(`search/?per_page=${perPage}&page=${pageNum}&search=${searchText}&type=post&_embed&_fields=author,id,slug,excerpt,title,date,tags,featured_media,_links,_embedded`)\r\n            .then(response => response)\r\n            .catch(error => ({data: error}));\r\n    },\r\n    getCategoryName: (categorySlug) => {\r\n        return instance.get(`categories/?slug=${categorySlug}`).then(response => response.data);\r\n    },\r\n    getPost: (slug) =>{\r\n        return instance.get(`posts/?slug=${slug}&_embed&_fields=id,content,title,_links,_embedded`).then(response => response.data);\r\n    },\r\n    getComments: (postId) => {\r\n        return instance.get(`comments/?post=${postId}`).then(response => response.data);\r\n    },\r\n    getByQuery: (query) =>{\r\n        return axios.get(query).then(response => response.data);\r\n    },\r\n    putComment: (data) => {\r\n        return instance.post(`comments`, data)\r\n            .then(response => response.data)\r\n            .catch(error => ({error}));\r\n    }\r\n};\r\n\r\nexport const PageAPI = {\r\n    getPage: (slug) =>{\r\n        return instance.get(`pages/?slug=${slug}&_fields=id,content,title`).then(response => response.data);\r\n    },\r\n}","import {PostAPI} from \"../../../api/posts\";\r\n\r\nconst SET_POST = \"setPost\";\r\nconst SET_EMPTY_POST = \"setEmptyPost\";\r\nconst RESET_POST = \"resetPost\";\r\nconst SET_COMMENTS = \"setComments\";\r\nconst POST_TOGGLE_IS_FETCHING = \"postToggleIsFetching\";\r\nconst COMMENTS_TOGGLE_IS_FETCHING = \"commentsToggleIsFetching\";\r\n\r\nconst setPost = (post) => ({\r\n    type: SET_POST,\r\n    post\r\n})\r\nconst setEmptyPost = () => ({\r\n    type: SET_EMPTY_POST\r\n})\r\nexport const resetPost = () => ({\r\n    type: RESET_POST\r\n})\r\nconst setComments = (comments) => ({\r\n    type: SET_COMMENTS,\r\n    comments\r\n})\r\nconst postToggleIsFetching = (isFetching) => ({\r\n    type: POST_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nconst commentsToggleIsFetching = (isFetching) => ({\r\n    type: COMMENTS_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\n\r\nexport const getPost = (slug) => async (dispatch, getState) => {\r\n    dispatch(postToggleIsFetching(true));\r\n    const data = await PostAPI.getPost(slug);\r\n    if(data.length === 0) {\r\n        dispatch(setEmptyPost());\r\n    }\r\n    else{\r\n        dispatch(setPost(data));\r\n        let postId = getState().post.currentPostData.id;\r\n        const commentsData = await PostAPI.getComments(postId);\r\n        dispatch(setComments(commentsData));\r\n    }\r\n    dispatch(postToggleIsFetching(false));\r\n}\r\n\r\nexport const addComment = (commentData, setError, done) => async (dispatch, getState) => {\r\n    dispatch(commentsToggleIsFetching(true));\r\n    const comment = {...commentData, post: getState().post.currentPostData.id}\r\n    const response = await PostAPI.putComment(comment);\r\n    if(response.error){\r\n        setError(\"content\", {\r\n            type: \"manual\",\r\n            message: \"Duplicate comment found. You seem to have said that already!\"\r\n        });\r\n    }\r\n    else{\r\n        done();\r\n        let postId = getState().post.currentPostData.id;\r\n        const commentsData = await PostAPI.getComments(postId);\r\n        dispatch(setComments(commentsData));\r\n    }\r\n    dispatch(commentsToggleIsFetching(false));\r\n}\r\n\r\n\r\nlet InitialState = {\r\n    postIsFetching: true,\r\n    commentsIsFetching: false,\r\n    currentPostData: {\r\n        isEmpty: false,\r\n        id: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        categoryName: \"\",\r\n        categorySlug: \"\",\r\n        comments: [],\r\n    }\r\n};\r\n\r\nconst postReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    isEmpty: false,\r\n                    id: action.post[0].id,\r\n                    title: action.post[0].title.rendered,\r\n                    content: action.post[0].content.rendered,\r\n                    categoryName: action.post[0]._embedded[\"wp:term\"][0][0].name,\r\n                    categorySlug: action.post[0]._embedded[\"wp:term\"][0][0].slug,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_EMPTY_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    isEmpty: true,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case RESET_POST:\r\n            stateCopy = {\r\n                ...state,\r\n                postIsFetching: true\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_COMMENTS:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPostData: {\r\n                    ...state.currentPostData,\r\n                    comments: action.comments.map(elem => (\r\n                        {\r\n                            author: elem.author_name,\r\n                            author_image_url: elem.author_avatar_urls[\"96\"],\r\n                            comment: elem.content.rendered,\r\n                            date: elem.date.replace(\"T\", \" \"),\r\n                            id: elem.id\r\n                        }\r\n                    ))\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case POST_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                postIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case COMMENTS_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                commentsIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default postReducer;","import Container from \"@material-ui/core/Container\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport RecordVoiceOverIcon from '@material-ui/icons/RecordVoiceOver';\r\nimport {useForm} from \"react-hook-form\";\r\nimport {addComment} from \"../model/post-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {useState} from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        paddingTop: theme.spacing(2),\r\n        paddingBottom: theme.spacing(2),\r\n    },\r\n    formCard: {\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(2),\r\n        paddingLeft: theme.spacing(3),\r\n        paddingRight: theme.spacing(3),\r\n        backgroundColor: theme.palette.elements.main,\r\n        color: theme.palette.elements.text\r\n    },\r\n    form: {\r\n        '& .MuiTextField-root': {\r\n            '& .MuiInputLabel-root': {\r\n                color: theme.palette.elements.text\r\n            },\r\n            '& .MuiInputBase-formControl': {\r\n                color: theme.palette.elements.text,\r\n            },\r\n            '& .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.elements.secondaryText,\r\n            },\r\n            '& .Mui-error .MuiOutlinedInput-notchedOutline': {\r\n                borderColor: theme.palette.error.dark,\r\n            }\r\n        },\r\n    },\r\n    input1: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    input2: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(2),\r\n        backgroundColor: theme.palette.buttons.main,\r\n        color: theme.palette.buttons.text,\r\n        '&:hover': {\r\n            backgroundColor: theme.palette.buttons.hover,\r\n            color: theme.palette.buttons.hoverText,\r\n        }\r\n    },\r\n    progress: {\r\n        color: theme.palette.secondary.main,\r\n    }\r\n}));\r\n\r\nexport const AddCommentForm = (props) => {\r\n    const [message, changeMessage] = useState({isShow: false, message: \"\"});\r\n    const dispatch = useDispatch();\r\n    const isFetching = useSelector(state => state.post.commentsIsFetching);\r\n    const classes = useStyles();\r\n    const {register, handleSubmit, setError, errors, setValue } = useForm({\r\n        mode: \"onBlur\"\r\n    });\r\n    const done = () => {\r\n        setValue('author_email', '');\r\n        setValue('author_name', '');\r\n        setValue('content', '');\r\n        changeMessage({\r\n            isShow: true,\r\n            message: \"Done!\"\r\n        })\r\n    }\r\n    const onSubmit = (data) => {\r\n        dispatch(addComment(data, setError, done));\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            <Card className={classes.formCard}>\r\n                <Typography variant=\"h5\" className={classes.title}>\r\n                    add comment\r\n                </Typography>\r\n                {isFetching && <CircularProgress className={classes.progress}/>}\r\n                <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <TextField\r\n                        error={errors.author_email}\r\n                        inputRef={register({required: true, pattern: /^\\S+@\\S+$/i})}\r\n                        name=\"author_email\"\r\n                        className={classes.input1}\r\n                        margin=\"normal\"\r\n                        id=\"outlined-textarea\"\r\n                        label=\"E-mail\"\r\n                        placeholder=\"vasya@mail.ru\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        error={errors.author_name}\r\n                        inputRef={register({required: true, maxLength: 15})}\r\n                        name=\"author_name\"\r\n                        className={classes.input2}\r\n                        margin=\"normal\"\r\n                        id=\"outlined-textarea\"\r\n                        label=\"Name\"\r\n                        placeholder=\"Vasily\"\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <TextField\r\n                        error={errors.content}\r\n                        inputRef={register({required: true, maxLength: 250})}\r\n                        name=\"content\"\r\n                        fullWidth={true}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Comment (max 250sym)\"\r\n                        placeholder=\"Hello world! Great post\"\r\n                        multiline\r\n                        rows={5}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    {errors.content && <p>{errors.content.message}</p>}\r\n                    {message.isShow && <p>{message.message}</p>}\r\n                    <Button\r\n                        name=\"submit\"\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        className={classes.button}\r\n                        startIcon={<RecordVoiceOverIcon />}\r\n                        onClick={() => { changeMessage({isShow: false, message: \"\"}) }}\r\n                    >\r\n                        add comment\r\n                    </Button>\r\n                </form>\r\n            </Card>\r\n        </Container>\r\n    )}\r\n\r\nexport default AddCommentForm;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport BreadcrumbsNavigation from \"../../../ui/molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport SinglePageTitle from \"../../../ui/atoms/single-page-title/single-page-title/single-page-title\";\r\nimport Content from \"../../../ui/atoms/content/content/content\";\r\nimport CommentsList from \"../../../ui/organisms/comments-list/comments-list/comments-list\";\r\nimport AddCommentForm from \"./add-comment-form\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(7)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n        },\r\n    }\r\n}));\r\n\r\nexport const PostTemplate = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <BreadcrumbsNavigation breadLinks={props.breadcrumbsLinks} currentPageName={props.pageTitle}/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <SinglePageTitle title={props.pageTitle}/>\r\n                    <Content content={props.pageContent}/>\r\n                    <CommentsList comments={props.comments}/>\r\n                    <AddCommentForm/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default PostTemplate;","import HomeIcon from \"@material-ui/icons/Home\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport {emphasize, makeStyles, withStyles} from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n    root: {\r\n        color: theme.palette.elements.text,\r\n        backgroundColor: theme.palette.elements.secondary,\r\n        height: theme.spacing(3),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        '&:hover, &:focus': {\r\n            backgroundColor: theme.palette.grey[300],\r\n            cursor: \"pointer\"\r\n        },\r\n        '&:active': {\r\n            boxShadow: theme.shadows[1],\r\n            backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n        },\r\n    },\r\n    icon: {\r\n        color: theme.palette.elements.text\r\n    }\r\n}))(Chip);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    breadCrumbs: {\r\n        marginBottom: theme.spacing(3),\r\n        color: theme.palette.elements.text,\r\n    },\r\n    chipsSkeleton: {\r\n        borderRadius: theme.spacing(2),\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(3),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n}));\r\n\r\nexport const LoadingBreadcrumbsNavigation = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadCrumbs}>\r\n            <StyledBreadcrumb\r\n                component={NavLink}\r\n                to=\"/\"\r\n                label=\"Home\"\r\n                icon={<HomeIcon className={classes.icon} fontSize=\"small\" />}\r\n            />\r\n            <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n            <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n        </Breadcrumbs>\r\n    )\r\n}\r\n\r\nexport default LoadingBreadcrumbsNavigation;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(2),\r\n        backgroundColor: theme.palette.elements.main\r\n    },\r\n    avatar: {\r\n        height: theme.spacing(6.2),\r\n        width: theme.spacing(6.2),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n    content: {\r\n        paddingTop: theme.spacing(0),\r\n    },\r\n    description: {\r\n        height: theme.spacing(5),\r\n        backgroundColor: theme.palette.elements.secondary,\r\n    },\r\n    header: {\r\n        '& .MuiCardHeader-subheader span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        },\r\n        '& .MuiCardHeader-title span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    },\r\n}));\r\n\r\nexport const LoadingComment = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                className={classes.header}\r\n                avatar={\r\n                    <Skeleton variant=\"circle\" className={classes.avatar}/>\r\n                }\r\n                title={\r\n                    <Skeleton/>\r\n                }\r\n                subheader={\r\n                    <Skeleton/>\r\n                }\r\n            />\r\n            <CardContent className={classes.content}>\r\n                <Skeleton variant=\"rect\" className={classes.description}/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default LoadingComment;","import LoadingComment from \"../../../molecules/comment/loading-comment/loading-comment\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport const LoadingCommentsList = (props) => {\r\n\r\n    let skeletonItems = [];\r\n    for (let i = 0; i < 3; i++){\r\n        skeletonItems.push(\r\n            <LoadingComment/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\">\r\n            {skeletonItems}\r\n        </Container>\r\n    )}\r\n\r\nexport default LoadingCommentsList;","import Typography from \"@material-ui/core/Typography\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    titleSkeleton: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    }\r\n}));\r\n\r\nexport const LoadingSinglePageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography align=\"center\" variant=\"h3\" component=\"h1\" className={classes.title}>\r\n            <Skeleton className={classes.titleSkeleton}/>\r\n        </Typography>\r\n    )}\r\n\r\nexport default LoadingSinglePageTitle;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentSkeleton: {\r\n        height: theme.spacing(70),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10)\r\n    },\r\n}));\r\n\r\nexport const LoadingContent = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className={classes.content}>\r\n                <Skeleton animation=\"wave\" variant=\"rect\" className={classes.contentSkeleton}/>\r\n            </div>\r\n        </Container>\r\n    )}\r\n\r\nexport default LoadingContent;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport LoadingCommentsList from \"../../../organisms/comments-list/loading-comments-list/loading-comments-list\";\r\nimport LoadingSinglePageTitle\r\n    from \"../../../atoms/single-page-title/loading-single-page-title/loading-single-page-title\";\r\nimport LoadingContent from \"../../../atoms/content/loading-content/loading-content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10)\r\n    },\r\n    contentSkeleton: {\r\n        height: theme.spacing(60),\r\n    }\r\n}));\r\n\r\nexport const LoadingPostTemplate = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <LoadingBreadcrumbsNavigation/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <LoadingSinglePageTitle/>\r\n                    <LoadingContent/>\r\n                    <LoadingCommentsList/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default LoadingPostTemplate;","import PostTemplate from \"./post\";\r\nimport LoadingPostTemplate from \"../../../ui/templates/post/loading-post/loading-post\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPost, resetPost} from \"../model/post-reducer\"\r\n\r\nexport const Post = (props) => {\r\n    const currentPost = useSelector(state => state.post.currentPostData);\r\n    const isFetching = useSelector(state => state.post.postIsFetching);\r\n    const dispatch = useDispatch();\r\n    const [isEmpty, toggleIsEmpty] = useState(false);\r\n    useEffect(() => {\r\n        toggleIsEmpty(currentPost.isEmpty);\r\n    }, [currentPost.isEmpty]);\r\n    useEffect(() => {\r\n        dispatch(getPost(props.slug));\r\n        return function cleanup() {\r\n            dispatch(resetPost(props.slug));\r\n        };\r\n    }, [props.slug]);\r\n    let lastLinksId;\r\n    if(props.links.length>0)lastLinksId = props.links[props.links.length-1].id + 1;\r\n    else lastLinksId = 0;\r\n    const links = [...props.links, {id: lastLinksId, linkAddress: `/posts/${currentPost.categorySlug}`, linkText: `${currentPost.categoryName}`}];\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{currentPost.title}</title>\r\n            </Helmet>\r\n            {!isFetching && isEmpty && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingPostTemplate\r\n                    breadcrumbsLinks={links}\r\n                    pageTitle={\"\"}/>\r\n                : <PostTemplate\r\n                    comments={currentPost.comments}\r\n                    breadcrumbsLinks={links}\r\n                    pageTitle={currentPost.title}\r\n                    pageContent={currentPost.content}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default Post;","import Post from \"../../../features/post/components\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SinglePostPage = (props) => {\r\n    let {post_slug} = useParams();\r\n\r\n    const links = [];\r\n\r\n    return (\r\n        <>\r\n            <Post links={links} slug={post_slug}/>\r\n        </>\r\n)}\r\n\r\nexport default SinglePostPage;","import Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const HeaderImage = (props) => {\r\n    const useStyles = makeStyles((theme) => ({\r\n        paper2: {\r\n            padding: theme.spacing(2),\r\n            textAlign: 'center',\r\n            color: theme.palette.text.secondary,\r\n            backgroundImage: `url(${props.imageSrc})`,\r\n            backgroundSize: \"cover\",\r\n            backgroundRepeat: \"none\",\r\n            backgroundPosition: \"center center\",\r\n            minHeight: \"300px\",\r\n            borderRadius: \"0\",\r\n            filter: \"brightness(0.8)\"\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper className={classes.paper2}></Paper>\r\n    )}\r\n\r\nexport default HeaderImage;","import Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport HeaderImage from \"../../atoms/header-image/header-image\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    headerGrid: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n}));\r\n\r\nexport const HeaderImageBlock = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid item xs={12} className={classes.headerGrid}>\r\n            <HeaderImage imageSrc={props.image}/>\r\n        </Grid>\r\n    )}\r\n\r\nexport default HeaderImageBlock;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.elements.main,\r\n    },\r\n    avatar: {\r\n        height: theme.spacing(6.2),\r\n        width: theme.spacing(6.2),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    tags: {\r\n        marginTop: theme.spacing(3),\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n            backgroundColor: theme.palette.elements.secondary,\r\n            color: theme.palette.elements.text\r\n        },\r\n    },\r\n    chipsSkeleton: {\r\n        borderRadius: theme.spacing(2),\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(3)\r\n    },\r\n    button1: {\r\n        width: theme.spacing(7),\r\n        height: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    button2: {\r\n        width: theme.spacing(9),\r\n        height: theme.spacing(3),\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    image: {\r\n        height: theme.spacing(25),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    description: {\r\n        height: theme.spacing(5),\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    title: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    },\r\n    header: {\r\n        '& .MuiCardHeader-subheader span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        },\r\n        '& .MuiCardHeader-title span': {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    },\r\n}));\r\n\r\nexport const LoadingPostCard = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Skeleton variant=\"circle\" className={classes.avatar}/>\r\n                    }\r\n                    title={\r\n                        <Skeleton/>\r\n                    }\r\n                    subheader={\r\n                        <Skeleton/>\r\n                    }\r\n                />\r\n                <Skeleton\r\n                    variant=\"rect\"\r\n                    animation=\"wave\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent>\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant=\"h5\"\r\n                        component=\"h2\"\r\n                    >\r\n                        <Skeleton className={classes.title}/>\r\n                    </Typography>\r\n                    <Skeleton variant=\"rect\" className={classes.description}/>\r\n                    <div className={classes.tags}>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                        <Skeleton variant=\"rect\" className={classes.chipsSkeleton}/>\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\nexport default LoadingPostCard;","import Grid from '@material-ui/core/Grid';\r\nimport LoadingPostCard from \"../../../molecules/post-card/loading-post-card/loading-post-card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n}));\r\n\r\nexport const LoadingPostCards = (props) => {\r\n    const classes = useStyles();\r\n    let skeletonItems = [];\r\n    let count = 6;\r\n    if(props.count)count=props.count;\r\n    for (let i = 0; i < count; i++){\r\n        skeletonItems.push(\r\n            <Grid item md={4} sm={12}>\r\n                <LoadingPostCard/>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={3} className={classes.root}>\r\n            {skeletonItems}\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingPostCards;","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    titleSkeleton: {\r\n        backgroundColor: theme.palette.elements.secondary\r\n    }\r\n}));\r\n\r\nexport const LoadingPageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n            <Skeleton className={classes.titleSkeleton}/>\r\n        </Typography>\r\n\r\n    )}\r\n\r\nexport default LoadingPageTitle;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingHomepagePostsTemplate = (props) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingHomepagePostsTemplate;","import {makeStyles} from \"@material-ui/core/styles\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    image: {\r\n        filter: \"grayscale(30%)\",\r\n        \"&:hover\": {\r\n            //filter: \"grayscale(0%)\"\r\n        }\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    tags: {\r\n        marginTop: theme.spacing(2.5),\r\n        display: 'flex',\r\n        justifyContent: 'left',\r\n        flexWrap: 'wrap',\r\n        '& > *': {\r\n            margin: theme.spacing(0.5),\r\n            backgroundColor: theme.palette.elements.secondary,\r\n            color: theme.palette.elements.text\r\n        },\r\n    },\r\n    header: {\r\n        color: theme.palette.elements.text,\r\n        '& .MuiCardHeader-subheader': {\r\n            color: theme.palette.elements.secondaryText,\r\n        }\r\n    },\r\n    root: {\r\n        backgroundColor: theme.palette.elements.main,\r\n    },\r\n    title: {\r\n        color: theme.palette.elements.text,\r\n    },\r\n    excerpt: {\r\n        color: theme.palette.elements.secondaryText,\r\n    }\r\n}));\r\n\r\nexport const PostCard = (props) => {\r\n    const classes = useStyles();\r\n    const tags = props.tags.map((tag) =>\r\n        <Chip size=\"small\" label={tag} />\r\n    );\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardActionArea component={NavLink} to={`/post/${props.slug}`}>\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    avatar={\r\n                        <Avatar aria-label=\"recipe\" src={props.author_image} className={classes.avatar}>\r\n                            E\r\n                        </Avatar>\r\n                    }\r\n                    title={props.author}\r\n                    subheader={props.date}\r\n                />\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt={`${props.title} image`}\r\n                    height=\"200\"\r\n                    image={(props.image_url === null) ? \"https://ichip.ru/images/cache/2019/7/29/fit_930_519_false_crop_960_600_0_0_q90_4172_6112aacf39.jpeg\" : props.image_url}\r\n                    title=\"Contemplative Reptile\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                        {props.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.excerpt}>\r\n                        {props.excerpt}\r\n                    </Typography>\r\n                    <div className={classes.tags}>\r\n                        {tags}\r\n                    </div>\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PostCard;","import Grid from '@material-ui/core/Grid';\r\nimport PostCard from \"../../../molecules/post-card/post-card/post-card\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginBottom: theme.spacing(4),\r\n    },\r\n    pagination: {\r\n        \"& .MuiPaginationItem-root\": {\r\n            backgroundColor: theme.palette.elements.main,\r\n            color: theme.palette.elements.text,\r\n            border: \"none\",\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.elements.secondary,\r\n            },\r\n        },\r\n        \"& .Mui-selected\": {\r\n            backgroundColor: theme.palette.elements.secondary,\r\n        }\r\n    }\r\n}));\r\n\r\nexport const PostCards = (props) => {\r\n    const postsItems = props.postsData.map((post) =>\r\n        <Grid item md={4} sm={12}>\r\n            <PostCard\r\n                key={post.id}\r\n                slug={post.slug}\r\n                title={post.title}\r\n                author={post.author}\r\n                author_image={post.author_image_url}\r\n                excerpt={post.excerpt}\r\n                date={post.date}\r\n                tags={post.tags}\r\n                image_url={post.image_url}\r\n            />\r\n        </Grid>\r\n    );\r\n    const classes = useStyles();\r\n    const handleChange = (event, value) => {\r\n        props.changePage(value);\r\n    };\r\n    return (\r\n            <Grid container spacing={3} className={classes.root}>\r\n                {postsItems}\r\n                {props.pagesCount > 1 &&\r\n                    <Grid item md={12}>\r\n                        <Pagination className={classes.pagination} count={props.pagesCount} page={props.currentPage} variant=\"outlined\" onChange={handleChange} showFirstButton showLastButton/>\r\n                    </Grid>\r\n                }\r\n            </Grid>\r\n    )}\r\nexport default PostCards;","import Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n        marginTop: theme.spacing(0),\r\n        color: theme.palette.primary.text,\r\n    }\r\n}));\r\n\r\nexport const PageTitle = (props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography variant=\"h5\" component=\"h2\" className={classes.title}>\r\n            {props.title}\r\n        </Typography>\r\n\r\n    )}\r\n\r\nexport default PageTitle;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nexport const HomepagePostsTemplate = (props) => {\r\n\r\n    return (\r\n        <Grid container>\r\n            { console.log(\"TEMPLATE --- \" + props.currentPage) }\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default HomepagePostsTemplate;","import {PostAPI} from \"../../../api/posts\";\r\n\r\nconst SET_POSTS = \"setPosts\";\r\nconst RESET_POSTS = \"resetPosts\";\r\nconst SET_POSTS_FROM_SEARCH = \"setPostsFromSearch\";\r\nconst POSTS_TOGGLE_IS_FETCHING = \"postsToggleIsFetching\";\r\nconst SET_FOUND_POSTS_ADDITIONAL_DATA = \"setFoundPostsAdditionalData\";\r\nconst SET_CATEGORY = \"setCategory\";\r\nconst POSTS_TOGGLE_IS_FOUND = \"postsToggleIsFound\";\r\nconst SET_POSTS_PAGES_COUNT = \"setPostsPagesCount\";\r\n\r\nconst setPostsPagesCount = (pagesCount) => ({\r\n    type: SET_POSTS_PAGES_COUNT,\r\n    pagesCount\r\n})\r\nconst postsToggleIsFound = (isFound) => ({\r\n    type: POSTS_TOGGLE_IS_FOUND,\r\n    isFound\r\n})\r\nexport const resetPosts = () => ({\r\n    type: RESET_POSTS\r\n})\r\nconst setPostsFromSearch = (posts) => ({\r\n    type: SET_POSTS_FROM_SEARCH,\r\n    posts\r\n})\r\nconst setCategory = (category) => ({\r\n    type: SET_CATEGORY,\r\n    category\r\n})\r\nconst setPosts = (posts) => ({\r\n    type: SET_POSTS,\r\n    posts\r\n})\r\nconst postsToggleIsFetching = (isFetching) => ({\r\n    type: POSTS_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\nconst setFoundPostsAdditionalData = (data, elemIndex) => ({\r\n    type: SET_FOUND_POSTS_ADDITIONAL_DATA,\r\n    data,\r\n    elemIndex\r\n})\r\n\r\nexport const getPosts = (category_slug, page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const categories = await PostAPI.getCategoryName(category_slug);\r\n    if (categories.length > 0){\r\n        dispatch(postsToggleIsFound(true));\r\n        const category = categories[0].name;\r\n        dispatch(setCategory(category));\r\n        const response = await PostAPI.getPosts(category, getState().posts.postsPerPage, page);\r\n        if(Array.isArray(response.data)){\r\n            dispatch(setPostsPagesCount(Math.ceil(response.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n            dispatch(setPosts(response.data));\r\n        }\r\n        else {\r\n            dispatch(postsToggleIsFound(false));\r\n        }\r\n    }\r\n    else dispatch(postsToggleIsFound(false));\r\n    dispatch(postsToggleIsFetching(false));\r\n}\r\nexport const getAllPosts = (page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const response = await PostAPI.getAllPosts(getState().posts.postsPerPage, page);\r\n    if(Array.isArray(response.data)){\r\n        dispatch(setPostsPagesCount(Math.ceil(response.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n        dispatch(setPosts(response.data));\r\n        dispatch(postsToggleIsFetching(false));\r\n    }\r\n    else{\r\n        dispatch(postsToggleIsFound(false));\r\n    }\r\n}\r\nexport const getFoundPosts = (searchRequest, page) => async (dispatch, getState) => {\r\n    dispatch(postsToggleIsFetching(true));\r\n    const foundPostsResponse = await PostAPI.getFoundPosts(searchRequest, getState().posts.postsPerPage, page);\r\n    if(Array.isArray(foundPostsResponse.data)){\r\n        dispatch(setPostsPagesCount(Math.ceil(foundPostsResponse.headers[\"x-wp-total\"] / getState().posts.postsPerPage)));\r\n        dispatch(setPostsFromSearch(foundPostsResponse.data));\r\n        const dataLength = getState().posts.postsData.length;\r\n        if(dataLength > 0) {\r\n            getState().posts.postsData.map( async (elem, index) => { // МОЖНО ЗАМЕНИТЬ НА FOR\r\n                const authorData = await PostAPI.getByQuery(elem.author_request); // get author info\r\n                let authorName = authorData.name;\r\n                let authorAvatar = authorData.avatar_urls[\"48\"];\r\n                const tagsData = await PostAPI.getByQuery(elem.tags_request); // get tags\r\n                let tags = tagsData.map(elem => elem.name);\r\n                let imageSrc;\r\n                if(elem.image_request !== \"\") { // if image not empty\r\n                    let imageData = await PostAPI.getByQuery(elem.image_request); // get image\r\n                    imageSrc = imageData.media_details[\"sizes\"].medium_large.source_url;\r\n                }\r\n                else{\r\n                    imageSrc = null;\r\n                }\r\n                dispatch(setFoundPostsAdditionalData({\r\n                    author: {authorName, authorAvatar},\r\n                    imageSrc,\r\n                    tags\r\n                }, index))\r\n                if(index+1 === dataLength){\r\n                    dispatch(postsToggleIsFetching(false));\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            dispatch(postsToggleIsFetching(false));\r\n        }\r\n    }\r\n    else {\r\n        dispatch(postsToggleIsFetching(false));\r\n    }\r\n}\r\n\r\nlet InitialState = {\r\n    postsPerPage: 9,\r\n    postsPagesCount: 1,\r\n    postsIsFetching: true,\r\n    postsData: [],\r\n    isCategoryFound: true,\r\n};\r\n\r\nconst postsReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_POSTS_PAGES_COUNT:\r\n            stateCopy = {\r\n                ...state,\r\n                postsPagesCount: action.pagesCount\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case POSTS_TOGGLE_IS_FOUND:\r\n            stateCopy = {\r\n                ...state,\r\n                isCategoryFound: action.isFound\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case RESET_POSTS:\r\n            stateCopy = {\r\n                ...state,\r\n                postsPagesCount: 1,\r\n                postsIsFetching: true,\r\n                postsData: [],\r\n                isCategoryFound: true,\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_CATEGORY:\r\n            stateCopy = {\r\n                ...state,\r\n                categoryName: action.category\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_POSTS:\r\n            if(action.posts != []){\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: action.posts.map(elem => (\r\n                        {\r\n                            id: elem.id,\r\n                            slug: elem.slug,\r\n                            date: elem.date.replace(\"T\", \" \"),\r\n                            title: elem.title.rendered,\r\n                            excerpt: elem.excerpt.rendered,\r\n                            author: elem._embedded.author[0].name,\r\n                            author_image_url: elem._embedded.author[0].avatar_urls[\"48\"],\r\n                            tags: elem._embedded[\"wp:term\"][1].map(elem2 => (elem2.name)),\r\n                            image_url:\r\n                                elem.featured_media !== 0\r\n                                    ? elem._embedded[\"wp:featuredmedia\"][0].media_details.sizes.medium_large.source_url\r\n                                    : null,\r\n                        }\r\n                    ))};\r\n            }\r\n            else{\r\n                stateCopy = {\r\n                    ...state, postsData: []\r\n                };\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_POSTS_FROM_SEARCH:\r\n            if(action.posts != []){\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: action.posts.map(elem => {\r\n                        if (elem._embedded.self[0].type === \"post\") {\r\n                            let imgReq;\r\n                            if(elem._embedded.self[0].featured_media > 0) imgReq = elem._embedded.self[0]._links[\"wp:featuredmedia\"][0].href;\r\n                            else imgReq = \"\";\r\n                            return {\r\n                                id: elem._embedded.self[0].id,\r\n                                slug: elem._embedded.self[0].slug,\r\n                                date: elem._embedded.self[0].date.replace(\"T\", \" \"),\r\n                                title: elem._embedded.self[0].title.rendered,\r\n                                excerpt: elem._embedded.self[0].excerpt.rendered,\r\n                                author: \"\",\r\n                                author_image_url: \"\",\r\n                                tags: [],\r\n                                image_url: null,\r\n                                author_request: elem._embedded.self[0]._links.author[0].href, // get a api link to get data\r\n                                image_request: imgReq, // get a api link to get data\r\n                                tags_request: elem._embedded.self[0]._links[\"wp:term\"][1].href, // get a api link to get data\r\n                            }\r\n                        }\r\n                    }).filter(elem => {\r\n                        return elem !== undefined && elem !== null;\r\n                    })};\r\n            }\r\n            else{\r\n                stateCopy = {\r\n                    ...state,\r\n                    postsData: []\r\n                };\r\n            }\r\n            return stateCopy;\r\n            break;\r\n        case SET_FOUND_POSTS_ADDITIONAL_DATA:\r\n            stateCopy = {\r\n                ...state,\r\n                postsData: state.postsData.map((elem,index)=>{\r\n                    if(index===action.elemIndex){\r\n                        elem.author = action.data.author.authorName;\r\n                        elem.author_image_url = action.data.author.authorAvatar;\r\n                        elem.image_url = action.data.imageSrc;\r\n                        elem.tags = action.data.tags;\r\n                        return elem;\r\n                    }\r\n                    return elem;\r\n                })}\r\n            return stateCopy;\r\n            break;\r\n        case POSTS_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                postsIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default postsReducer;","import LoadingHomepagePostsTemplate\r\n    from \"../../../ui/templates/homepage-posts/loading-homepage-posts/loading-homepage-posts\";\r\nimport HomepagePostsTemplate from \"../../../ui/templates/homepage-posts/homepage-posts/homepage-posts\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getAllPosts, resetPosts} from \"../model/posts-reducer\"\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\nexport const AllPostsPage = (props) => {\r\n    let history = useHistory();\r\n    const [isNotFound, toggleIsNotFound] = useState(false);\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const isCategoryFound = useSelector(state => state.posts.isCategoryFound);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const currentPage = useSelector(state => state.posts.postsPage);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllPosts(props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.pageNum]);\r\n    useEffect(() => {\r\n        toggleIsNotFound(!isCategoryFound);\r\n    }, [isCategoryFound]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/${pageNum}`);\r\n    }\r\n    {console.log(\"FEATURE --- \" + currentPage)}\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{props.pageName}</title>\r\n            </Helmet>\r\n            {isNotFound && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingHomepagePostsTemplate headerImage={props.image} postsPerPage={postsPerPage}/>\r\n                : <HomepagePostsTemplate headerImage={props.image} postsData={posts} pageName={props.pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default AllPostsPage;","export default __webpack_public_path__ + \"static/media/ocean.54e5e1bb.jpg\";","import AllPostsPage from \"../../features/posts/components/all-posts-page\";\r\nimport ocean from \"../../include/images/ocean.jpg\"\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const Homepage = (props) => {\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <AllPostsPage categoryName=\"без рубрики\" pageName=\"Homepage\" image={ocean} pageNum={pageNum}/>\r\n    )}\r\n\r\nexport default Homepage;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nconst breadcrumbsLinks = [\r\n];\r\n\r\nexport const CategoryPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <BreadcrumbsNavigation breadLinks={breadcrumbsLinks} currentPageName={props.pageName}/>\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default CategoryPostsTemplate;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingCategoryPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingBreadcrumbsNavigation/>\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingCategoryPostsTemplate;","import CategoryPostsTemplate from \"../../../ui/templates/category-posts/category-posts/category-posts\";\r\nimport LoadingCategoryPostsTemplate from \"../../../ui/templates/category-posts/loading-category-posts/loading-category-posts\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPosts, resetPosts} from \"../model/posts-reducer\"\r\nimport {Redirect, useHistory} from \"react-router-dom\";\r\n\r\nexport const CategoryPostsPage = (props) => {\r\n    let history = useHistory();\r\n    const [isNotFound, toggleIsNotFound] = useState(false);\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pageName = useSelector(state => state.posts.categoryName);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const isCategoryFound = useSelector(state => state.posts.isCategoryFound);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts(props.categorySlug, props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.categorySlug, props.pageNum]);\r\n    useEffect(() => {\r\n        toggleIsNotFound(!isCategoryFound);\r\n    }, [isCategoryFound]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/posts/${props.categorySlug}/${pageNum}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{pageName}</title>\r\n            </Helmet>\r\n            {isNotFound && <Redirect to=\"/404\" />}\r\n            {isFetching\r\n                ? <LoadingCategoryPostsTemplate postsPerPage={postsPerPage} headerImage={props.image}/>\r\n                : <CategoryPostsTemplate headerImage={props.image} postsData={posts} pageName={pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default CategoryPostsPage;","export default __webpack_public_path__ + \"static/media/gory.0dc798df.png\";","import CategoryPostsPage from \"../../features/posts/components/category-posts-page\";\r\nimport gory from \"../../include/images/gory.png\"\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const CategoryPage = (props) => {\r\n    let {category_slug} = useParams();\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <CategoryPostsPage categorySlug={category_slug} pageNum={pageNum} image={gory}/>\r\n    )}\r\n\r\nexport default CategoryPage;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport SinglePageTitle from \"../../../atoms/single-page-title/single-page-title/single-page-title\";\r\nimport Content from \"../../../atoms/content/content/content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(7)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4),\r\n        marginBottom: theme.spacing(10),\r\n        fontSize: theme.spacing(2.7),\r\n        lineHeight: theme.spacing(0.21),\r\n        '& img': {\r\n            maxWidth: \"100%\",\r\n            height: \"auto\",\r\n        },\r\n        '& .is-style-rounded img': {\r\n            borderRadius: \"20%\",\r\n        },\r\n        '& .is-style-twentytwentyone-image-frame img': {\r\n            padding: \"15px\",\r\n            border: \"3px solid black\",\r\n        },\r\n    }\r\n}));\r\n\r\nexport const PageTemplate = (props) => {\r\n\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <BreadcrumbsNavigation breadLinks={props.breadcrumbsLinks} currentPageName={props.pageTitle}/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <SinglePageTitle title={props.pageTitle}/>\r\n                    <Content content={props.pageContent}/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default PageTemplate;","import PageTemplate from \"../../ui/templates/page/page/page\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst links = [];\r\nconst title = \"Page not found\";\r\n\r\nexport const NotFoundPage = (props) => (\r\n    <>\r\n        <Helmet>\r\n            <title>{title}</title>\r\n        </Helmet>\r\n       <PageTemplate\r\n                breadcrumbsLinks={links}\r\n                isFetching={false}\r\n                pageTitle={title}\r\n                pageContent={\"\"}/>\r\n    </>\r\n)\r\n\r\nexport default NotFoundPage;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport LoadingPostCards from \"../../../organisms/post-cards/loading-post-cards/loading-post-cards\";\r\nimport LoadingPageTitle from \"../../../atoms/page-title/loading-page-title/loading-page-title\";\r\n\r\nexport const LoadingFoundPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <LoadingBreadcrumbsNavigation/>\r\n                    <LoadingPageTitle/>\r\n                    <LoadingPostCards count={props.postsPerPage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default LoadingFoundPostsTemplate;","import Grid from '@material-ui/core/Grid';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport BreadcrumbsNavigation from \"../../../molecules/breadcrumbs/breadcrumbs/breadcrumbs\";\r\nimport HeaderImageBlock from \"../../../molecules/header-image/header-image\";\r\nimport PostCards from \"../../../organisms/post-cards/post-cards/post-cards\";\r\nimport PageTitle from \"../../../atoms/page-title/page-title/page-title\";\r\n\r\nconst breadcrumbsLinks = [\r\n];\r\n\r\nexport const FoundPostsTemplate = (props) => {\r\n    return (\r\n        <Grid container>\r\n            <HeaderImageBlock image={props.headerImage}/>\r\n            <Grid item xs={12}>\r\n                <Container maxWidth=\"lg\">\r\n                    <BreadcrumbsNavigation breadLinks={breadcrumbsLinks} currentPageName={props.pageName}/>\r\n                    <PageTitle title={props.pageName}/>\r\n                    <PostCards postsData={props.postsData} pagesCount={props.pagesCount} currentPage={props.currentPage} changePage={props.changePage}/>\r\n                </Container>\r\n            </Grid>\r\n        </Grid>\r\n    )}\r\n\r\nexport default FoundPostsTemplate;","import {useEffect} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getFoundPosts, resetPosts} from \"../model/posts-reducer\"\r\nimport LoadingFoundPostsTemplate from \"../../../ui/templates/found-posts/loading-found-posts/loading-found-posts\";\r\nimport FoundPostsTemplate from \"../../../ui/templates/found-posts/found-posts/found-posts\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const FoundPostsPage = (props) => {\r\n    let history = useHistory();\r\n\r\n    const postsPerPage = useSelector(state => state.posts.postsPerPage);\r\n    const posts = useSelector(state => state.posts.postsData);\r\n    const isFetching = useSelector(state => state.posts.postsIsFetching);\r\n    const pagesCount = useSelector(state => state.posts.postsPagesCount);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(getFoundPosts(props.searchRequest, props.pageNum));\r\n        return function cleanup() {\r\n            dispatch(resetPosts());\r\n        };\r\n    }, [props.searchRequest, props.pageNum]);\r\n\r\n    const changePage = (pageNum) => {\r\n        history.push(`/search/${props.searchRequest}/${pageNum}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{props.pageName}</title>\r\n            </Helmet>\r\n            {isFetching\r\n                ? <LoadingFoundPostsTemplate postsPerPage={postsPerPage} headerImage={props.image}/>\r\n                : <FoundPostsTemplate headerImage={props.image} postsData={posts} pageName={props.pageName} pagesCount={pagesCount} currentPage={props.pageNum} changePage={changePage}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default FoundPostsPage;","export default __webpack_public_path__ + \"static/media/forest.d3b3a05b.jpeg\";","import FoundPostsPage from \"../../features/posts/components/found-posts-page\";\r\nimport forest from \"../../include/images/forest.jpeg\"\r\nimport NotFoundPage from \"../404/page\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SearchPostsPage = (props) => {\r\n    let {request} = useParams();\r\n    let {pageNum} = useParams();\r\n\r\n    return (\r\n        <>\r\n        {request.length > 0\r\n                ? <FoundPostsPage pageName={\"Search for: \" + request} searchRequest={request} pageNum={pageNum} image={forest}/>\r\n                : <NotFoundPage/>\r\n        }\r\n        </>\r\n    )}\r\n\r\nexport default SearchPostsPage;","import Container from \"@material-ui/core/Container\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport LoadingBreadcrumbsNavigation from \"../../../molecules/breadcrumbs/loading-breadcrumbs/loading-breadcrumbs\";\r\nimport LoadingSinglePageTitle\r\n    from \"../../../atoms/single-page-title/loading-single-page-title/loading-single-page-title\";\r\nimport LoadingContent from \"../../../atoms/content/loading-content/loading-content\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    pageWrapper: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    content: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    contentSkeleton: {\r\n        height: theme.spacing(70),\r\n    }\r\n}));\r\nconsole.log(\"da\");\r\n\r\nexport const LoadingPageTemplate = (props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className={classes.pageWrapper}>\r\n                <LoadingBreadcrumbsNavigation/>\r\n                <Container maxWidth=\"lg\" className={classes.contentWrapper}>\r\n                    <LoadingSinglePageTitle/>\r\n                    <LoadingContent/>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n    )}\r\n\r\nexport default LoadingPageTemplate;","import {PageAPI} from \"../../../api/posts\";\r\n\r\nconst SET_PAGE = \"setPage\";\r\nconst SET_EMPTY_PAGE = \"setEmptyPage\";\r\nconst PAGE_TOGGLE_IS_FETCHING = \"pageToggleIsFetching\";\r\nconst RESET_PAGE = \"resetPage\";\r\n\r\nconst setPage = (page) => ({\r\n    type: SET_PAGE,\r\n    page\r\n})\r\nconst setEmptyPage = () => ({\r\n    type: SET_EMPTY_PAGE\r\n})\r\nexport const resetPage = () => ({\r\n    type: RESET_PAGE\r\n})\r\nexport const pageToggleIsFetching = (isFetching) => ({\r\n    type: PAGE_TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getPage = (slug) => async (dispatch) => {\r\n    dispatch(pageToggleIsFetching(true));\r\n    const data = await PageAPI.getPage(slug);\r\n    if(data.length === 0) {\r\n        dispatch(setEmptyPage());\r\n    }\r\n    else{\r\n        dispatch(setPage(data));\r\n    }\r\n    dispatch(pageToggleIsFetching(false));\r\n}\r\n\r\nlet InitialState = {\r\n    pageIsFetching: true,\r\n    currentPageData: {\r\n        isEmpty: false,\r\n        id: 1,\r\n        title: \"\",\r\n        content: \"\",\r\n        comments: []\r\n    }\r\n};\r\n\r\nconst pageReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case SET_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPageData: {\r\n                    isEmpty: false,\r\n                    id: action.page[0].id,\r\n                    title: action.page[0].title.rendered,\r\n                    content: action.page[0].content.rendered,\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case SET_EMPTY_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                currentPageData: {\r\n                    isEmpty: true,\r\n                    id: \"\",\r\n                    title: \"\",\r\n                    content: \"\",\r\n                }\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case RESET_PAGE:\r\n            stateCopy = {\r\n                ...state,\r\n                pageIsFetching: true\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case PAGE_TOGGLE_IS_FETCHING:\r\n            stateCopy = {\r\n                ...state,\r\n                pageIsFetching: action.isFetching\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default pageReducer;","import PageTemplate from \"../../../ui/templates/page/page/page\";\r\nimport LoadingPageTemplate from \"../../../ui/templates/page/loading-page/loading-page\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getPage, resetPage} from \"../model/page-reducer\"\r\n\r\nexport const Page = (props) => {\r\n    const currentPage = useSelector(state => state.page.currentPageData);\r\n    const isFetching = useSelector(state => state.page.pageIsFetching);\r\n    const dispatch = useDispatch();\r\n    const [isEmpty, toggleIsEmpty] = useState(false);\r\n    useEffect(() => {\r\n        dispatch(getPage(props.slug));\r\n        return function cleanup() {\r\n            dispatch(resetPage());\r\n        };\r\n    }, [props.slug]);\r\n    useEffect(() => {\r\n        toggleIsEmpty(currentPage.isEmpty);\r\n    }, [currentPage.isEmpty]);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>{currentPage.title}</title>\r\n            </Helmet>\r\n            {!isFetching && isEmpty && <Redirect to=\"/404\" />}\r\n            {isFetching ?\r\n                <LoadingPageTemplate\r\n                    breadcrumbsLinks={props.links}\r\n                    pageTitle={\"\"}/> :\r\n                <PageTemplate\r\n                    breadcrumbsLinks={props.links}\r\n                    pageTitle={currentPage.title}\r\n                    pageContent={currentPage.content}/>\r\n            }\r\n        </>\r\n    )}\r\n\r\nexport default Page;","import SinglePostPage from \"./posts/post/page\";\r\nimport Homepage from \"./index/page\";\r\nimport CategoryPage from \"./posts/page\";\r\nimport NotFoundPage from \"./404/page\";\r\nimport SearchPostsPage from \"./search/page\"\r\nimport SinglePage from \"./page/page\";\r\n\r\nexport const routes = [\r\n    {\r\n        path: \"/404\",\r\n        exact: true,\r\n        component: NotFoundPage\r\n    },\r\n    {\r\n        path: \"/:pageNum?\",\r\n        exact: true,\r\n        component: Homepage,\r\n    },\r\n    {\r\n        path: \"/page/:slug\",\r\n        exact: true,\r\n        component: SinglePage\r\n    },\r\n    {\r\n        path: \"/posts/:category_slug/:pageNum?\",\r\n        exact: true,\r\n        component: CategoryPage\r\n    },\r\n    {\r\n        path: \"/post/:post_slug\",\r\n        exact: true,\r\n        component: SinglePostPage\r\n    },\r\n    {\r\n        path: \"/search/:request/:pageNum?\",\r\n        exact: true,\r\n        component: SearchPostsPage\r\n    },\r\n    {\r\n        component: NotFoundPage\r\n    },\r\n];\r\n\r\n// header menu links\r\nexport const links = [\r\n    {id: 1, linkAddress: \"/posts/about-projects\", linkText: \"Projects\"},\r\n    {id: 2, linkAddress: \"/page/about-me\", linkText: \"About me (CV)\"},\r\n    {id: 3, linkAddress: \"/post/react-wordpress-blog\", linkText: \"Demo\"},\r\n    {id: 4, linkAddress: \"/404\", linkText: \"404\"},\r\n];\r\n","import Page from \"../../features/single-page/components\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nexport const SinglePage = (props) => {\r\n    let {slug} = useParams();\r\n\r\n    const links = [];\r\n\r\n    return (\r\n        <>\r\n            <Page links={links} slug={slug}/>\r\n        </>\r\n    )}\r\n\r\nexport default SinglePage;","const TOGGLE_THEME_TYPE = \"toggleThemeType\";\r\nconst TOGGLE_IS_MOBILE_MENU_ACTIVE = \"toggleIsMobileMenuActive\";\r\n\r\nexport const toggleThemeType = (themeType) => ({\r\n    type: TOGGLE_THEME_TYPE,\r\n    themeType\r\n})\r\nexport const toggleIsMobileMenuActive = (isActive) => ({\r\n    type: TOGGLE_IS_MOBILE_MENU_ACTIVE,\r\n    isActive\r\n})\r\n\r\n\r\nlet InitialState = {\r\n    is_theme_type_fetching: true,\r\n    theme_type: \"dark\",\r\n    is_mobile_menu_active: false,\r\n};\r\n\r\nconst globalReducer = (state = InitialState, action) => {\r\n    let stateCopy;\r\n    switch (action.type){\r\n        case TOGGLE_THEME_TYPE:\r\n            stateCopy = {\r\n                ...state,\r\n                theme_type: action.themeType,\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        case TOGGLE_IS_MOBILE_MENU_ACTIVE:\r\n            stateCopy = {\r\n                ...state,\r\n                is_mobile_menu_active: action.isActive,\r\n            };\r\n            return stateCopy;\r\n            break;\r\n        default:\r\n            return {...state}\r\n            break;\r\n    }\r\n}\r\n\r\nexport default globalReducer;","import {toggleThemeType} from \"../../globalSettings/model/global-reducer\";\r\nimport {Brightness3, BrightnessLow} from \"@material-ui/icons\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n\r\nexport const ToggleThemeButton = () => {\r\n    const dispatch = useDispatch();\r\n    const theme_type = useSelector(state => state.global.theme_type)\r\n\r\n    return (\r\n        <IconButton\r\n            onClick={() => {theme_type === \"dark\" ? dispatch(toggleThemeType(\"light\")) : dispatch(toggleThemeType(\"dark\"))}}\r\n            aria-label=\"delete\"\r\n        >\r\n            {theme_type === \"dark\"\r\n                ? <Brightness3 style={{ color: grey[100] }}/>\r\n                : <BrightnessLow style={{ color: grey[100] }}/>\r\n            }\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport const ToggleThemeButtonMobile = () => {\r\n    const dispatch = useDispatch();\r\n    const theme_type = useSelector(state => state.global.theme_type)\r\n    const onChangeThemeType = () => {\r\n        if(theme_type === \"dark\")dispatch(toggleThemeType(\"light\"));\r\n        else dispatch(toggleThemeType(\"dark\"));\r\n    }\r\n\r\n    return (\r\n        <ListItem button onClick={onChangeThemeType}>\r\n            <ListItemText primary={theme_type === \"dark\" ? \"light theme\" : \"dark theme\"} />\r\n        </ListItem>\r\n    )\r\n}","import {Link as NavLink} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuItem: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        color: theme.palette.common.white,\r\n        display: \"inline-block\",\r\n        paddingBlock: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nexport const MenuLink = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Link to={props.linkTo} className={classes.menuItem} component={NavLink}>\r\n            {props.linkText}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default MenuLink;","import {fade, makeStyles} from \"@material-ui/core/styles\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n    form: {\r\n        marginTop: \"auto\",\r\n        marginBottom: \"auto\"\r\n    }\r\n}));\r\n\r\nexport const SearchInputWithIcon = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <form onKeyDown={props.onKeyPress} className={classes.form}>\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon/>\r\n                </div>\r\n                <InputBase\r\n                    onChange={props.onChangeSearchText}\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    value={props.inputValue}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                />\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchInputWithIcon;","import SearchInputWithIcon from \"../../../ui/molecules/search-input-with-icon/search-input-with-icon\";\r\nimport {useState} from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const SearchForm = (props) => {\r\n    let [value, setValue]=useState(\"\");\r\n    let history = useHistory();\r\n\r\n    let onChangeSearchText = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n    let onKeyPress = (e) => {\r\n        if(e.keyCode === 13){\r\n            e.preventDefault();\r\n            if(e.target.value !== \"\"){\r\n                setValue(\"\");\r\n                history.push(`/search/${value}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchInputWithIcon onKeyPress={onKeyPress} onChangeSearchText={onChangeSearchText} inputValue={value}/>\r\n        </>\r\n    )}\r\n\r\nexport default SearchForm;","import {List} from '@material-ui/core';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport {links} from \"../../../pages\";\r\nimport MenuLink from \"../../../ui/atoms/menu-link/menu-link\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport {grey} from \"@material-ui/core/colors\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {toggleIsMobileMenuActive} from \"../../globalSettings/model/global-reducer\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport SearchForm from \"../search-form/search-form\";\r\nimport {ToggleThemeButtonMobile} from \"../toggle-theme/toggle-theme\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        backgroundColor: theme.palette.elements.main,\r\n        color: theme.palette.elements.text,\r\n    }\r\n}));\r\n\r\nfunction ListItemLink(props) {\r\n    return <ListItem button component={NavLink} {...props} />;\r\n}\r\n\r\nexport const MobileMenu = () => {\r\n    const classes = useStyles();\r\n    const isMobileMenuActive = useSelector(state => state.global.is_mobile_menu_active)\r\n    const menuLinks = links.map((link) => (\r\n                <ListItemLink key={link.id} to={link.linkAddress}>\r\n                    <ListItemText primary={link.linkText} />\r\n                </ListItemLink>\r\n        )\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {isMobileMenuActive &&\r\n                <>\r\n                    <List>\r\n                        {menuLinks}\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <ToggleThemeButtonMobile/>\r\n                    </List>\r\n                    <Divider/>\r\n                    <List>\r\n                        <SearchForm/>\r\n                    </List>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const DesktopMenu = () => {\r\n    const menuLinks = links.map((link) =>\r\n        <MenuLink linkTo={link.linkAddress} linkText={link.linkText} key={link.id}/>\r\n    );\r\n    return (\r\n        <Box>\r\n            {menuLinks}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const MobileHamburgerIcon = () => {\r\n    const dispatch = useDispatch();\r\n    const isMobileMenuActive = useSelector(state => state.global.is_mobile_menu_active);\r\n\r\n    return (\r\n        <IconButton onClick={() => {\r\n            if(isMobileMenuActive)dispatch(toggleIsMobileMenuActive(false))\r\n            else dispatch(toggleIsMobileMenuActive(true))\r\n        }}>\r\n            <MenuIcon fontSize=\"large\" style={{ color: grey[100] }}/>\r\n        </IconButton>\r\n    )\r\n}","import useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nexport const HideOnScroll = (props) => {\r\n    const { children, window } = props;\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n        <Slide appear={false} direction=\"down\" in={!trigger}>\r\n            {children}\r\n        </Slide>\r\n    );\r\n}","import Typography from \"@material-ui/core/Typography\";\r\nimport {Link as NavLink} from \"react-router-dom\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logoLink: {\r\n        color: theme.palette.common.white,\r\n        textDecoration: \"none\"\r\n    },\r\n}));\r\n\r\nexport const LogoWithNavLink = (props) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <Typography variant=\"h5\">\r\n            <NavLink className={classes.logoLink} to=\"/\">{props.logoText}</NavLink>\r\n        </Typography>\r\n     )\r\n}\r\n\r\nexport default LogoWithNavLink;","// material ui\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport useTheme from \"@material-ui/core/styles/useTheme\";\r\n\r\n// other features\r\nimport {ToggleThemeButton} from \"./toggle-theme/toggle-theme\";\r\nimport {DesktopMenu, MobileHamburgerIcon, MobileMenu} from \"./header-menu/header-menu\";\r\nimport SearchForm from \"./search-form/search-form\";\r\nimport {HideOnScroll} from \"./hide-on-scroll/hide-on-scroll\";\r\n\r\n// ui\r\nimport LogoWithNavLink from \"../../ui/atoms/logo/logo\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolBar: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n    appBar: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n        minHeight: theme.spacing(7.5),\r\n    },\r\n    box: {\r\n        display: \"flex\",\r\n    }\r\n}));\r\n\r\nexport const Header = (props) => {\r\n    const theme = useTheme();\r\n    const matches = useMediaQuery(theme.breakpoints.down('md'));\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <>\r\n            <HideOnScroll {...props}>\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Container position=\"fixed\">\r\n                        <Toolbar className={classes.toolBar}>\r\n                            <LogoWithNavLink logoText=\"Edlay.net\"/>\r\n                            {!matches\r\n                                ?\r\n                                    <>\r\n                                        <DesktopMenu/>\r\n                                        <Box className={classes.box}>\r\n                                            <ToggleThemeButton/>\r\n                                            <SearchForm/>\r\n                                        </Box>\r\n                                    </>\r\n                                : <MobileHamburgerIcon/>\r\n                            }\r\n                        </Toolbar>\r\n                    </Container>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            {matches && <MobileMenu/>}\r\n        </>\r\n    )\r\n}","import {Route} from \"react-router-dom\";\r\nimport {Switch} from \"react-router-dom\";\r\n\r\nexport function RouteWithSubRoutes(route) {\r\n    return (\r\n        <Route\r\n            path={route.path}\r\n            render={props => (\r\n                // pass the sub-routes down to keep nesting\r\n                <route.component {...props} state={route.state} routes={route.routes} />\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport function MapRoutes(props){\r\n    let mapRoutes = props.routes.map((route, i) => (\r\n        <RouteWithSubRoutes state={props.state} key={i} {...route} />\r\n    ));\r\n    return (\r\n        <Switch>\r\n            {mapRoutes}\r\n        </Switch>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useCopyrightStyles = makeStyles((theme) => ({\r\n    copyright: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n\r\nfunction Copyright() {\r\n    const classes = useCopyrightStyles();\r\n\r\n    return (\r\n        <Typography variant=\"body2\" className={classes.copyright}>\r\n            {'Copyright © '}\r\n            {new Date().getFullYear()}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useFooterStyles = makeStyles((theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: 'auto',\r\n        backgroundColor: theme.palette.primary.main\r\n    },\r\n    link: {\r\n        color: \"white\",\r\n    }\r\n}));\r\n//color: theme.palette.footer.linkcolor: theme.palette.footer.main\r\nexport const FooterTemplate = (props) => {\r\n    const classes = useFooterStyles();\r\n\r\n    return(\r\n            <footer className={classes.footer}>\r\n                <Container maxWidth=\"lg\">\r\n                    <Link className={classes.link} target=\"_blank\" color=\"inherit\" href=\"https://github.com/edlay17/react-wordpress\">\r\n                        github.com/edlay17\r\n                    </Link>\r\n                    <Copyright />\r\n                </Container>\r\n            </footer>\r\n    )\r\n}\r\n\r\nexport default FooterTemplate;","import createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\r\n\r\nexport const lightTheme = createMuiTheme({\r\n    palette: {\r\n        text: {\r\n            primary: \"rgba(0, 0, 0, 0.87)\",\r\n            secondary: \"rgba(0, 0, 0, 0.54)\",\r\n        },\r\n        primary: {\r\n            light: '#f5f5f5',\r\n            main: '#424242',\r\n            background: '#f5f5f5',\r\n            text: '#212121',\r\n        },\r\n        secondary: { // form border\r\n            main: '#424242',\r\n        },\r\n        elements: { // post card\r\n            main: \"#ffffff\",\r\n            secondary: \"#e0e0e0\",\r\n            text: \"#424242\",\r\n            secondaryText: \"#757575\",\r\n        },\r\n        links: {\r\n            visited: \"#606e8c\",\r\n            hover: \"#1560bd\",\r\n            main: \"#08457e\",\r\n        },\r\n        buttons: {\r\n            text: \"#f5f5f5\",\r\n            hoverText: \"#f5f5f5\",\r\n            hover: \"#757575\",\r\n            main: \"#424242\",\r\n        },\r\n        footer: {\r\n            main: \"#ffffff\",\r\n            link: \"#ffffff\"\r\n        }\r\n    }\r\n});\r\n\r\nexport const darkTheme = createMuiTheme({\r\n    palette: {\r\n        text: {\r\n            primary: \"#cfd8dc\",\r\n            secondary: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        primary: {\r\n            light: \"#777777\",\r\n            main: '#212121',\r\n            background: '#333333',\r\n            text: '#ffffff',\r\n        },\r\n        secondary: { // form border\r\n            main: '#cfd8dc',\r\n            text: \"#212121\",\r\n            secondaryText: \"#757575\",\r\n        },\r\n        elements: { // post card\r\n            main: \"#424242\",\r\n            secondary: \"#575757\",\r\n            text: \"#cfd8dc\",\r\n            secondaryText: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        links: {\r\n            visited: \"#bdbdbd\",\r\n            hover: \"#e0e0e0\",\r\n            main: \"#eeeeee\",\r\n        },\r\n        buttons: {\r\n            text: \"#212121\",\r\n            hoverText: \"#212121\",\r\n            hover: \"#757575\",\r\n            main: \"rgba(255,255,255,0.54)\",\r\n        },\r\n        footer: {\r\n            main: \"#ffffff\",\r\n            link: \"#ffffff\"\r\n        },\r\n    }\r\n});","import {useSelector} from \"react-redux\";\r\nimport {ThemeProvider} from \"@material-ui/styles\";\r\nimport {darkTheme, lightTheme} from \"../../ui/theme-options\";\r\n\r\nexport const withTheme = Component => ({...props}) => {\r\n    const theme_type = useSelector(state => state.global.theme_type);\r\n    return (\r\n        <ThemeProvider theme={theme_type === \"dark\" ? darkTheme : lightTheme}>\r\n            <Component {...props} />\r\n        </ThemeProvider>\r\n    )\r\n};\r\n\r\nexport default withTheme;\r\n\r\n","import './App.css';\nimport {routes} from \"./pages/index\";\nimport {Header} from \"./features/header/header\";\nimport {MapRoutes} from \"./lib/routes\";\nimport FooterTemplate from \"./ui/organisms/footer/footer\";\n\n// MATERIAL UI\nimport { makeStyles } from '@material-ui/core/styles';\nimport withTheme from \"./features/theme-options/with-theme-hok\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: theme.spacing(7.5),\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: `100vh`,\n        backgroundColor: theme.palette.primary.background,\n    },\n}));\n\nfunction App(props) {\n  const classes = useStyles();\n\n  return (\n      <div className={classes.root}>\n          <Header/>\n          <MapRoutes routes={routes} state={props.state}/>\n          <FooterTemplate/>\n      </div>\n  );\n}\n\nexport default withTheme(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    BrowserRouter as Router\n} from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {Provider} from \"react-redux\";\nimport {\n    applyMiddleware,\n    combineReducers,\n    createStore\n} from 'redux';\nimport thunk from \"redux-thunk\";\nimport postsReducer from \"./features/posts/model/posts-reducer\";\nimport postReducer from \"./features/post/model/post-reducer\";\nimport pageReducer from \"./features/single-page/model/page-reducer\";\nimport globalReducer from \"./features/globalSettings/model/global-reducer\";\n\nlet reducers = combineReducers({\n    posts: postsReducer,\n    post: postReducer,\n    page: pageReducer,\n    global: globalReducer,\n});\nlet store = createStore(\n    reducers,\n    applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <React.StrictMode>\n      <Router>\n          <CssBaseline />\n          <Provider store={store}>\n              <App state={store.getState()}/>\n          </Provider>\n      </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}